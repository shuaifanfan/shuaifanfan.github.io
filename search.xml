<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GCN和自回归顺序MADRL的空-地协同感知研究</title>
      <link href="/2025/05/27/GCN%E5%92%8C%E8%87%AA%E5%9B%9E%E5%BD%92%E9%A1%BA%E5%BA%8FMADRL%E7%9A%84%E7%A9%BA-%E5%9C%B0%E5%8D%8F%E5%90%8C%E6%84%9F%E7%9F%A5%E7%A0%94%E7%A9%B6/"/>
      <url>/2025/05/27/GCN%E5%92%8C%E8%87%AA%E5%9B%9E%E5%BD%92%E9%A1%BA%E5%BA%8FMADRL%E7%9A%84%E7%A9%BA-%E5%9C%B0%E5%8D%8F%E5%90%8C%E6%84%9F%E7%9F%A5%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DRL-rainbow复现</title>
      <link href="/2025/05/27/DRL-rainbow%E5%A4%8D%E7%8E%B0/"/>
      <url>/2025/05/27/DRL-rainbow%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Bi-LSTM/Transformer做中文短文本分类</title>
      <link href="/2025/05/27/Bi-LSTM-Transformer%E5%81%9A%E4%B8%AD%E6%96%87%E7%9F%AD%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/"/>
      <url>/2025/05/27/Bi-LSTM-Transformer%E5%81%9A%E4%B8%AD%E6%96%87%E7%9F%AD%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>prompt-finetune抽取新闻文本关键事件要素</title>
      <link href="/2025/05/27/prompt-finetune%E6%8A%BD%E5%8F%96%E6%96%B0%E9%97%BB%E6%96%87%E6%9C%AC%E5%85%B3%E9%94%AE%E4%BA%8B%E4%BB%B6%E8%A6%81%E7%B4%A0/"/>
      <url>/2025/05/27/prompt-finetune%E6%8A%BD%E5%8F%96%E6%96%B0%E9%97%BB%E6%96%87%E6%9C%AC%E5%85%B3%E9%94%AE%E4%BA%8B%E4%BB%B6%E8%A6%81%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微调codeT5+做NL2Code</title>
      <link href="/2025/05/27/%E5%BE%AE%E8%B0%83codeT5-%E5%81%9ANL2Code/"/>
      <url>/2025/05/27/%E5%BE%AE%E8%B0%83codeT5-%E5%81%9ANL2Code/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GAN做手写数字生成</title>
      <link href="/2025/05/27/GAN%E5%81%9A%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E7%94%9F%E6%88%90/"/>
      <url>/2025/05/27/GAN%E5%81%9A%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TextCNN做关系抽取</title>
      <link href="/2025/05/27/TextCNN%E5%81%9A%E5%85%B3%E7%B3%BB%E6%8A%BD%E5%8F%96/"/>
      <url>/2025/05/27/TextCNN%E5%81%9A%E5%85%B3%E7%B3%BB%E6%8A%BD%E5%8F%96/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ego-Planner无人机自主飞行项目总结</title>
      <link href="/2025/04/27/Ego-Planner%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%87%AA%E4%B8%BB%E9%A3%9E%E8%A1%8C%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
      <url>/2025/04/27/Ego-Planner%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%87%AA%E4%B8%BB%E9%A3%9E%E8%A1%8C%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="论文项目调研"><a href="#论文项目调研" class="headerlink" title="论文项目调研"></a>论文项目调研</h2><p>调查无GPS-无人机自主飞行相关论文和项目,最终落脚在浙大高飞老师FAST-Lab团队的文章<a href="https://github.com/ZJU-FAST-Lab/Fast-Drone-250">EGO-Planner</a>: 一种基于梯度的四旋翼无人机ESDF的局部规划器。对比传统的轨迹梯度优化的能大大压缩实时运算时间：<br>传统：先建立ESDF地图，再利用ESDF地图中的梯度信息优化轨迹；<br>Ego-Planner方法：只计算局部轨迹区域的ESDF地图的梯度信息。</p><p><img src="/images/Ego/image42.png" width="50%" height="50%" /></p><h2 id="Ego-Planner的Pipline：曲线优化问题"><a href="#Ego-Planner的Pipline：曲线优化问题" class="headerlink" title="Ego-Planner的Pipline：曲线优化问题"></a>Ego-Planner的Pipline：曲线优化问题</h2><ol><li>深度相机数据和IMU数据转换为三维点云，构建OctoMap+OSDFMap</li><li><p>不考虑障碍物，直接得到一条比较光滑的从起点到目标点的B样条曲线的初值</p> <div style="display: flex; justify-content: center;">     <img src="/images/Ego/image40.png" width="300"/>     <img src="/images/Ego/image42.png" width="300"/> </div></li><li><p>用均匀B样条做轨迹优化，实时求解局部OSDF的梯度</p></li><li><p>最小二乘计算出时间分配合理的新控制点初值</p> <div style="display: flex; justify-content: center;">     <img src="/images/Ego/image41.png" width="300"/>     <img src="/images/Ego/image44.png" width="300"/> </div></li><li>针对平滑+碰撞+动力学可行性，进行轨迹的梯度优化</li><li>B样条曲线和控制点的示意图 <div style="display: flex; justify-content: center;">     <img src="/images/Ego/image39.png" width="260"/>     <img src="/images/Ego/image43.png" width="340"/> </div></li></ol><h2 id="仿真验证和学习"><a href="#仿真验证和学习" class="headerlink" title="仿真验证和学习"></a>仿真验证和学习</h2><p><strong>基于Ubuntu-ROS-Prometheus的单机路径规划</strong></p><p>运行ROS必备启动的roscore，脚本依次运行了四个launch文件<br><img src="/images/Ego/image45.png" width="100%" height="100%" /></p><ol><li>启动gazebo仿真环境，带有仿真D435i的无人机模型</li><li><p>启动UAV1控制节点，在Prometheus下控制，为后面路径规划发送控制指令做准备</p> <div style="display: flex; justify-content: center;">     <img src="/images/Ego/image46.png" width="300"/>     <img src="/images/Ego/image47.png" width="380"/> </div></li><li><p>启动octomap建图服务，为后面ego规划做准备</p></li><li>启动ego_planner 仿真，并由B样条生成轨迹，发送控制指令给无人机，控制飞行 <div style="display: flex; justify-content: center;">     <img src="/images/Ego/image48.png" width="300"/>     <img src="/images/Ego/image49.png" width="300"/> </div></li></ol><h2 id="无人机硬件组装"><a href="#无人机硬件组装" class="headerlink" title="无人机硬件组装"></a>无人机硬件组装</h2><p>主导对整个无人机全流程的焊接组装：<strong>视觉传感器-机载电脑-飞控-电调电机-供电五层结构。</strong></p><p>焊接发生在 定制底座的外表供电点焊锡，蓄电池的供电端子，飞控的稳压模块，机载电脑的与定制底板供电连接。</p><p><img src="/images/Ego/image12.jpg" width="60%" height="60%" /></p><h2 id="设置飞控"><a href="#设置飞控" class="headerlink" title="设置飞控"></a>设置飞控</h2><p>基于<strong>QGroundControl</strong>，主导完成定制版本无人机飞控的参数设置。飞控的调试，在年前能完成遥控无人机进行正确的电机无螺旋桨转动。</p><p>飞控是PX4 Pixhaw 6C，与Ego-Planner项目中实际的飞控并不相同，花费了一定的时间在设置遥控器和飞控上，这是依靠Ego-Planner程序自主飞行的基础。需要检查遥控器、飞控、连接正常，电调、电机，飞控正常供电。烧录正确版本的PX4 固件，正确设置根目录的IMU频率，设置各通道对应的模式，设置飞机机型，设置电机协议，设置波特率，优化飞控响应性能。</p><p><img src="/images/Ego/image51.png" width="60%" height="60%" /></p><h2 id="验证自主飞行"><a href="#验证自主飞行" class="headerlink" title="验证自主飞行"></a>验证自主飞行</h2><p><strong>主导完成Ego-Planner代码框架中参数的设置</strong>：比如膨胀系数，油门百分比，相机内参等参数<br>VINS的外参标定设置:只有在确定深度相机和飞控的刚体的平移旋转关系之后，才能外参矩阵</p><div style="display: flex; justify-content: center;">    <img src="/images/Ego/image52.png" width="300"/>    <img src="/images/Ego/image53.png" width="300"/></div><p><strong>主导在创新工场进行Ego-Planner自主飞行测试</strong>，以及demo测试。如下是自主飞行过程对应的OSDF地图分析：</p><p><img src="/images/Ego/image88.png" width="100%" height="100%" /></p><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><iframewidth="800"height="450"src='/images/Ego/m1.mp4'frameborder="0"allowfullscreen></iframe>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ego-Planner </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>news</title>
      <link href="/2025/04/24/news/"/>
      <url>/2025/04/24/news/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2025.4.24</p></blockquote><p>VS Code 版本 1.99（从2025 年 3 月）开始，VS Code 分发的预构建服务器仅与基于 glibc 2.28 或更高版本的 Linux 发行版兼容。</p><p>连接远程主机可能出现不满足运行vs code服务器的先决条件的报错， 原因最可能是VS Code 更新过快，而远程主机环境未能及时适配新版本。</p><p><strong>最快解决方案</strong>：降级 VS Code 客户端版本，将本地 VS Code 版本降级到 v1.85。</p><p><strong>问题</strong>：本地的vscode copilot低版本不适配，待解决。</p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> news </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于BERT/ERNIE微调和中文句法语义分析框架的问题匹配</title>
      <link href="/2024/12/20/%E5%9F%BA%E4%BA%8EBERT-ERNIE%E5%BE%AE%E8%B0%83%E5%92%8C%E4%B8%AD%E6%96%87%E5%8F%A5%E6%B3%95%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90%E6%A1%86%E6%9E%B6%E7%9A%84%E9%97%AE%E9%A2%98%E5%8C%B9%E9%85%8D/"/>
      <url>/2024/12/20/%E5%9F%BA%E4%BA%8EBERT-ERNIE%E5%BE%AE%E8%B0%83%E5%92%8C%E4%B8%AD%E6%96%87%E5%8F%A5%E6%B3%95%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90%E6%A1%86%E6%9E%B6%E7%9A%84%E9%97%AE%E9%A2%98%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="赛题背景"><a href="#赛题背景" class="headerlink" title="赛题背景"></a>赛题背景</h2><p>问题匹配（Question Matching）任务旨在判断两个自然问句之间的语义是否等价，是自然语言处理领域的一个重要研究方向。问题匹配同时也具有很高的商业价值，在信息检索、智能客服等领域发挥着重要作用。<br>近年来，虽然基于深度神经网络的模型已经在一些问题匹配评测集上取得了与人类相仿甚至超越人类的效果，但在处理真实应用场景中的问题时仍面临鲁棒性不足等问题。当存在微小的字面变化时，模型将无法做出正确判断（如下图），在影响产品体验的同时也会造成相应的经济损失。</p><p>当前大多数工作采用单一的指标在与训练集同分布的测试集上评测模型的好坏。这种评测方式可能过高的估计了模型能力，并且缺乏对模型鲁棒性的细粒度评估。本次评测关注问题匹配模型在真实应用场景中的鲁棒性，从词汇理解、句法结构、错别字、口语化、对话理解五个维度检测模型的鲁棒性，推动语义匹配技术的发展。本次竞赛采用的数据集来自于千言开源数据集项目，包括了哈尔滨工业大学（深圳）的LCQMC和BQ数据集、OPPO的小布对话短文本数据集以及百度的DuQM数据集，期望从多维度、多领域出发，全面评价模型的鲁棒性，进一步提升问题匹配技术的研究水平。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="已有方案"><a href="#已有方案" class="headerlink" title="已有方案"></a>已有方案</h3><p><a href="https://www.bytezonex.com/archives/dXa6Y20W.html">question matching有哪些方法</a>（单塔、双塔）Pointwise，DSSM，sentence BERT</p><h3 id="为什么用BERT"><a href="#为什么用BERT" class="headerlink" title="为什么用BERT"></a>为什么用BERT</h3><p>为什么用bert（架构和预训练任务，<a href="https://developer.volcengine.com/articles/7387287908556505099">中文bert</a>，微调容易100M参数）</p><h3 id="我们的方案：基于BERT-ERNIE微调-中文句法语义分析"><a href="#我们的方案：基于BERT-ERNIE微调-中文句法语义分析" class="headerlink" title="我们的方案：基于BERT/ERNIE微调+中文句法语义分析"></a>我们的方案：基于BERT/ERNIE微调+中文句法语义分析</h3><p>主导解决问题匹配在词汇理解、句法结构、错别字、口语化等维度的鲁棒性。</p><h4 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h4><p><strong>在飞桨AIStudio，对LCQMC、BQCorpus和OPPO小布对话短文本数据集进行无关词语去除、文本规范化的数据预处理，</strong></p><p>1数据预处理：（数据清洗后按照8:2, 总共35w+17w（oppo）两类数据集，1：1标签，50字以内，打乱顺序重新划分， batchsize=150/128，训练集42w，2800 iteration，eval step=400，截断长度100token， 5e-6学习率，GPU paddle AI Lab免费版</p><p>将省市区统一简称，</p><p>特有名词（大学、银行，节假日，品牌，快递，航空公司，五险一金社保）的简写，</p><p>垂类场景针对数据集语音助手OPPO手机型号，</p><p>错别字的纠正匹配oppo、0：</p><p>阿拉伯数字转为中文，数学算术式的中文表述</p><p>无意义词过滤，（呼唤语音助手、请问句、求解释、求帮忙，说说，告诉，语气词）</p><p>标点符号去除</p><h4 id="BERT-ERNIE-微调"><a href="#BERT-ERNIE-微调" class="headerlink" title="BERT/ERNIE 微调"></a>BERT/ERNIE 微调</h4><p><strong>结合R-Drop策略微调paddlenlp的ernie-gram-zh和bert-wwm-ext-chinese单塔模型，在百度DuQM和OPPO小布对话短文本上问题匹配正确率达到81.7%；</strong></p><p>2bert微调（数据清洗+early stop+r-drop）(注意bert输入格式input id，token type ，position ids，attention mask，五种special token 【cls，sep，pad，mask，unk】，返回值形式)</p><h4 id="中文句法语义分析的校正"><a href="#中文句法语义分析的校正" class="headerlink" title="中文句法语义分析的校正"></a>中文句法语义分析的校正</h4><p><strong>针对中文问题匹配建立拼音拼写、句法结构和词法语义的分析框架，校正口语化、错别字、句法结构不同的文本，正确率提升7.5%；</strong></p><p>库（pypinyin，pycorrector，KenLM）</p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>最终在测试集正确率达到89.2%。</p>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DL和RL入门</title>
      <link href="/2024/11/27/DL%E5%92%8CRL%E5%85%A5%E9%97%A8/"/>
      <url>/2024/11/27/DL%E5%92%8CRL%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>传承自yyx学长</p><h2 id="Step-0：深度学习是一切基础"><a href="#Step-0：深度学习是一切基础" class="headerlink" title="Step 0：深度学习是一切基础"></a>Step 0：深度学习是一切基础</h2><p>1、假如你已有python基础，那么入门深度学习首先需要掌握pytorch框架，并通过敲代码来快速掌握神经网络的重要概念，如梯度下降、CNN、RNN。<br><a href="https://mofanpy.com/tutorials/machine-learning/torch/">https://mofanpy.com/tutorials/machine-learning/torch/</a><br>2、接下来开始深入，尝试理解并掌握近几年逐步发展的CNN、RNN变体。<br><a href="https://github.com/zergtant/pytorch-handbook">https://github.com/zergtant/pytorch-handbook</a></p><h2 id="Step-1：强化学习原理入门"><a href="#Step-1：强化学习原理入门" class="headerlink" title="Step 1：强化学习原理入门"></a>Step 1：强化学习原理入门</h2><p>1、下面这个内容通俗易懂的介绍了DRL的核心内容：<br><a href="https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/">https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/</a><br>2、知乎上学习笔记，给出了强化学习大多数算法的数学原理。可重点看博客评论，里面有一些在实现各个算法时，实际情况与理论估计不一致时的分析。此外，从他的博客中，你可以看到强化学习不是只能玩游戏，在投资量化、推荐系统中，同样大放异彩。<br><a href="https://www.zhihu.com/people/db39e3e0528520071b0a6e5f6240cfea">https://www.zhihu.com/people/db39e3e0528520071b0a6e5f6240cfea</a></p><h2 id="Step-2：DRL算法实现"><a href="#Step-2：DRL算法实现" class="headerlink" title="Step 2：DRL算法实现"></a>Step 2：DRL算法实现</h2><ol><li>Yyx推荐PPO：（实现地很轻量，适合入门跑）<br><a href="https://github.com/XinJingHao/PPO-Continuous-Pytorch">https://github.com/XinJingHao/PPO-Continuous-Pytorch</a></li></ol><p>2、前面实现的PPO，缺少很多必要的调参技巧，而这些技巧非常重要，可以在下面这份代码中找到。其中，需要了解融合了GAE算法后的PPO，寻找它与tianshou中PPO的不同。<br>(性能很好的PPO代码)<br><a href="https://github.com/ikostrikov/pytorch-a2c-ppo-acktr-gail">https://github.com/ikostrikov/pytorch-a2c-ppo-acktr-gail</a></p><p>3、2016级清华毕业设计tianshou，所有算法都是“最简”Pytorch实现，一共不超过2k行。其中，优先级较高的是DQN、DDPG、PPO、GAE四个算法。<br><a href="https://github.com/thu-ml/tianshou（这个是封装地比较深的，是在pytorch之上的对RL的抽象，类似RLLib）">https://github.com/thu-ml/tianshou（这个是封装地比较深的，是在pytorch之上的对RL的抽象，类似RLLib）</a></p><p>4、此时需要了解DQN、DDPG、PPO、GAE四个算法的原理，读论文原文。</p><h2 id="Step-3：游戏环境设置"><a href="#Step-3：游戏环境设置" class="headerlink" title="Step 3：游戏环境设置"></a>Step 3：游戏环境设置</h2><p>1、在Step 2中（1）中，里面测试了最简单的两个游戏CartPole和Pendulum，分别是离散动作、续动作空间，最简单的游戏，试试看。<a href="https://github.com/thu-ml/tianshou">https://github.com/thu-ml/tianshou</a><br>2、在Step 2中（2）中，需要了解Atari57游戏集中的离散动作Pong 、Breakout、Seaquest三款游戏（难度递增）、连续动作halfcheetah、hopper、reacher三款机器人仿真，共6款游戏。<a href="https://github.com/ikostrikov/pytorch-a2c-ppo-acktr-gail">https://github.com/ikostrikov/pytorch-a2c-ppo-acktr-gail</a><br>说明：<br>    以上绝大多数游戏都基于Gym仿真引擎，最稳定的安装方法见<a href="https://www.jianshu.com/p/536d300a397e（Windows/Ubuntu/OSX，建议用Ubuntu）。该环境中还有无数其它的游戏，感兴趣的话，值得你去发现。">https://www.jianshu.com/p/536d300a397e（Windows/Ubuntu/OSX，建议用Ubuntu）。该环境中还有无数其它的游戏，感兴趣的话，值得你去发现。</a><br>    如果对Gym中游戏的实现方法，感兴趣，可以以这份代码为例。因为我们也经常需要去仿真、设计一些符合业界需要的原创场景。<br><a href="https://github.com/phossen/gym-bubbleshooter">https://github.com/phossen/gym-bubbleshooter</a></p><h2 id="Step-4：DRL业界较强算法（视情而做）"><a href="#Step-4：DRL业界较强算法（视情而做）" class="headerlink" title="Step 4：DRL业界较强算法（视情而做）"></a>Step 4：DRL业界较强算法（视情而做）</h2><p>1、IMPALA算法框架。该框架可以让强化学习以异步多机多进程的方式大规模训练，去年开始在工业界落地。<a href="https://github.com/facebookresearch/torchbeast">https://github.com/facebookresearch/torchbeast</a><br>2、IMPALA改进版。为了让IMPALA更快，这份代码将每个进程的任务做了更合理的划分。<a href="https://github.com/google-research/seed_rl">https://github.com/google-research/seed_rl</a></p>]]></content>
      
      
      <categories>
          
          <category> DRL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DRL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLP总结</title>
      <link href="/2024/08/27/NLP%E6%80%BB%E7%BB%93/"/>
      <url>/2024/08/27/NLP%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<ol><li>LLM评估指标<a href="https://zhuanlan.zhihu.com/p/651410752">LLM评估指标困惑度的理解 - 知乎</a></li><li>信息量，信息熵，KL散度（相对熵），交叉熵，单分类问题的损失函数是KL散度（简化成了交叉熵），多分类问题的损失函数是多个单分类（二项分布）损失函数求和，单分类分类层是softmax，单份类是多个sigmoid<a href="https://blog.csdn.net/tsyccnh/article/details/79163834">一文搞懂交叉熵在机器学习中的使用，透彻理解交叉熵背后的直觉-CSDN博客</a>，回归用MSE，分类用交叉熵</li><li>精确率，召回率（查全率），TF，TP，FN，FP，F1score</li><li>语言模型，n元语法模型，elmo，gpt，bert，bart  <a href="https://cloud.tencent.com/developer/article/2348463">https://cloud.tencent.com/developer/article/2348463</a></li><li>NLP任务：文本分类、命名实体识别（NER）或情感分析等，NLP评价指标：困惑度（Perplexity）、BLEU 分数和 ROUGE 分数，</li><li><p><strong>语言模型评估文本序列符合人类语言使用习惯程度的模型</strong>。<a href="https://blog.csdn.net/qq_27586341/article/details/110952649">语言模型常用评价方法：perplexity、bleu_perplexity指标-CSDN博客</a>，语言模型仅仅对句子出现的概率进行建模 ， 并不尝试去“理解”句子的内容含义<br><a href="https://zhuanlan.zhihu.com/p/23975563718">BLEU指标介绍 - 知乎</a>，bleu先求n个p，再求加权几何平均数，，再乘以惩罚项e的次幂</p></li><li><p>语言建模、机器翻译、文本分类和句子匹配，<a href="https://zhuanlan.zhihu.com/p/65865071">中文到底需要分词嘛？ - 知乎</a>中文不用分词?</p></li><li><a href="https://blog.csdn.net/a910247/article/details/137604232">一篇文章详解深度学习正则化方法（L1、L2、Dropout正则化相关概念、定义、数学公式、Python代码实现）-CSDN博客</a> 正则化防止过拟合方式，dropout缩放和l1、l2正则化, <a href="https://blog.csdn.net/zhaohongfei_358/article/details/129625803">权重衰减weight_decay参数从入门到精通_weight decay-CSDN博客</a>, l2正则化再sgd下等于权重衰减，从损失函数挪到torch.optim优化器上</li><li>防止过拟合：数据增强，shuffle，l1，l2正则，drop out，早停，归一化</li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI1MjQ2OTQ3Ng==&amp;mid=2247634953&amp;idx=2&amp;sn=ad003f41baadd9ddf122930bbb5cffb9&amp;">归一化技术比较研究：Batch Norm, Layer Norm, Group Norm</a>层归一化，batch归一化，</li><li>优化器比较：SGD，SGDM加入了动量 ， <strong>RMSProp加入了学习率滑动衰减，Adam融合了SGDM和RMSProp</strong></li><li>命名实体识别，如何提取特有名词（jieba）<a href="https://blog.csdn.net/weixin_51407397/article/details/130840080">【NLP论文】01 基于 Jieba 和 Word2vec 的关键词词库构建_词库 关键词-CSDN博客</a>,bert的结构和与训练任务，transformer手撕</li><li><p>word2vec：语言模型中的一种，它是从大量文本预料中以无监督方式学习语义知识的模型<br><strong>统计语言模型，来计算一个句子的概率的概率模型，n元语法（词表规模C^n的参数量，需要事先存储C^n个概率值），词袋模型，</strong><a href="https://zhuanlan.zhihu.com/p/114538417">深入浅出Word2Vec原理解析 - 知乎</a>，用神经网络建模NNLM（建模word embedding+softmax计算此词表概率），word embedding作为一个language model的副产品，<strong>distributed representation和one-hot representation</strong><a href="https://www.cnblogs.com/guoyaohua/p/9240336.html">NLP之——Word2Vec详解 - 郭耀华 - 博客园</a><br>NNLM步骤：</p><ol><li>用一个简单模型训练出连续的词向量；</li><li>基于词向量的表达，训练一个连续的Ngram神经网络模型。而NNLM模型的计算瓶颈主要是在第二步</li></ol><p>Word2vec，是一群用来产生词向量的相关模型，不考虑词顺序，分为CBOW和skip-gram两种类型。三层结构，有V<em>N，N</em>V，两个矩阵，</p><ul><li><p>word2vector的两个优化：层次化softmax和负采样，对于skip-gram最后softmax计算的优化</p></li><li><p>word2vector和NNLM思想：通过嵌入一个线性的投影矩阵（projection matrix），将原始的one-hot向量映射为一个稠密的连续向量，并通过一个语言模型的任务去学习这个向量的权重</p></li></ul></li><li><strong>Word Embedding的训练方法大致可以分为两类：一类是无监督或弱监督的预训练；一类是端对端（end to end）的有监督训练。端到端举例：通过一个Embedding层和若干个卷积层连接而成的深度神经网络以实现对句子的情感分类，可以学习到语义更丰富的词向量表达。</strong></li><li>整理nlp相关领域的python库</li><li>强化学习基础知识整理，RNN，LSTM，CNN在NLP中的应用，GRU,CV卷积和信号卷积？信息论可以看看，TextCNN，BERT和命名实体识别<a href="https://zhuanlan.zhihu.com/p/567920519">保姆级教程，用PyTorch和BERT进行命名实体识别 - 知乎</a>   |    <a href="https://zhuanlan.zhihu.com/p/403495863">读懂BERT，看这一篇就够了 - 知乎</a></li><li>r-drop <a href="https://developer.aliyun.com/article/1207719">R-Drop: Regularized Dropout for Neural Networks 论文笔记（介绍，模型结构介绍、代码、拓展KL散度等知识）-阿里云开发者社区</a></li><li>o1，deepseek R1，Claude，gemini，grok</li><li>query-title 分类场景下,bert 模型的可解释attention-head<a href="https://zhuanlan.zhihu.com/p/148729018，">https://zhuanlan.zhihu.com/p/148729018，</a> tokenizer和embedding（word，subword、char三种量级分词）（分词、tokenze、embedding是三件事）<a href="https://zhuanlan.zhihu.com/p/631463712，https://blog.csdn.net/lsb2002/article/details/133095184，jieba的paddle模式，HF的Tokenizer封装了分词器了吗">https://zhuanlan.zhihu.com/p/631463712，https://blog.csdn.net/lsb2002/article/details/133095184，jieba的paddle模式，HF的Tokenizer封装了分词器了吗</a>, hugging face的library document。tokenizer和分词，<a href="https://zhuanlan.zhihu.com/p/458452872">https://zhuanlan.zhihu.com/p/458452872</a>, <a href="https://blog.csdn.net/inthat/article/details/145740673，">https://blog.csdn.net/inthat/article/details/145740673，</a><br><a href="https://zhuanlan.zhihu.com/p/458452872">中英文分词</a>、<a href="https://www.yswqjymdx.com/posts/NLP%E5%88%86%E8%AF%8DNote/">中文分词</a>、<a href="https://www.huaxiaozhuan.com/%E5%B7%A5%E5%85%B7/huggingface_transformer/chapters/1_tokenizer.html">tokenizer</a>、<a href="https://blog.csdn.net/muyao987/article/details/126304969">训练tokenizer</a>、(<a href="https://zhuanlan.zhihu.com/p/610171544">https://zhuanlan.zhihu.com/p/610171544</a>)</li><li>pytorch 和paddlenlp的 load_dataset/dataset， dataloader 创建数据集形式，服务器配置，llama7B微调，google Colab？<a href="https://www.53ai.com/news/OpenSourceLLM/2025032263418.html">hugging face下载模型包括</a>（模型权重配置、tokenizer，推理生成配置、readme+license）</li><li>自回归，自编码，Seq2Seq<a href="https://zhuanlan.zhihu.com/p/610171544，模型量化部署">https://zhuanlan.zhihu.com/p/610171544，模型量化部署</a></li><li><strong>AI算法工程师手册(华校专)</strong><a href="https://www.huaxiaozhuan.com/">https://www.huaxiaozhuan.com/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LLM+Embodied AI</title>
      <link href="/2024/07/30/LLM-Embodied-AI/"/>
      <url>/2024/07/30/LLM-Embodied-AI/</url>
      
        <content type="html"><![CDATA[<blockquote><p> <a href="https://arxiv.org/abs/2103.04918v8">2103.04918v8] A Survey of Embodied AI: From Simulators to Research Tasks (arxiv.org)</a></p></blockquote><p><a href="https://blog.csdn.net/weixin_39653948/article/details/133960099">【EAI】A Survey of Embodied AI: From Simulators to Research Tasks-CSDN博客</a></p><p><a href="https://blog.csdn.net/penriver/article/details/136287650">具身智能（Embodied AI）的概念、核心要素、难点及突破性进展-CSDN博客</a></p><p><a href="https://www.thepaper.cn/newsDetail_forward_24392857">稚晖君独家撰文：具身智能即将为通用机器人补全最后一块拼图_澎湃号·湃客_澎湃新闻-The Paper</a></p><p>具身智能的环境（simulator）：游戏场景构建+真实世界扫描构建。</p><p>Embodied AI的主要三类研究任务：Visual Exploration，Visual Navigation，Embodied QA。</p><p>Visual Exploration：传统机器人中的SLAM问题，可被建模为POMDP过程。</p><p>Visual Navigation：智能体可在有或没有外部先验或自然语言指令的情况下，在三维环境中向目标导航。</p><p>Embodied QA：在物理具身状态下执行 QA，可拆分为导航任务和QA任务。导航模块和视觉问题解答模块首先进行单独训练，然后由 REINFORCE 进行联合训练。</p><p>具身智能挑战：智能体的记忆和内部表征，研究任务的复杂性也在不断增加，多智能体，数据集质量规模。</p><hr><blockquote><p><a href="https://arxiv.org/pdf/2404.00282">2404.00282 (arxiv.org) Survey on Large Language Model-Enhanced Reinforcement Learning: Concept, Taxonomy, and Methods</a></p></blockquote><p><a href="https://mp.weixin.qq.com/s/O5JKScfe1pypXV_jwqC-TQ">「大模型+强化学习」最新综述！港中文深圳130余篇论文：详解四条主流技术路线 (qq.com)</a></p><ol><li><p>信息处理者（information processor）：1）文字和视觉表征提取；2）复杂自然语言翻译。<br>比如把序列生成作为任务，可以把下一个token的产生作为一个动作，输入的state则是已经生成的句子，把句子通过LLM特征提取，在输入RL的策略网络，效果maybe变化。</p></li><li><p>奖励设计者（reward designer）：即隐式奖励模型与显式奖励模型（奖励函数代码生成）。<br>比如像自动驾驶的每一帧画面是一个state，那么前后两帧的变化的奖励怎么合理设计，可以考虑用视觉大模型去设计，比如眼看着就要撞墙，让大模型判定为负奖励。</p></li><li><p>决策者（decision-maker）：包含直接决策与间接辅助决策两种。<br>基于transformer的大模型能捕捉长距离以来，那么类似于序列生成的任务，可以用LLM作为策略网络，根据已有的句子（state），选择下一个动作（token）。</p></li><li><p>生成者（generator）：即1）世界模型中的轨迹生成和2）强化学习中的策略（行为）解释生成。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> LLM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上机IO总结</title>
      <link href="/2024/06/27/%E4%B8%8A%E6%9C%BAIO%E6%80%BB%E7%BB%93/"/>
      <url>/2024/06/27/%E4%B8%8A%E6%9C%BAIO%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><a href="/images/IOpdf/bfs与dfs详解知乎.pdf">bfs与dfs详解知乎.pdf</a><br><a href="/images/IOpdf/CPlusauto关键字CSDN博客.pdf">CPlusauto关键字CSDN博客.pdf</a><br><a href="/images/IOpdf/CPlus实现二叉树深度优先搜索广度优先搜索CSDN博客.pdf">CPlus实现二叉树深度优先搜索广度优先搜索CSDN博客.pdf</a><br><a href="/images/IOpdf/CPlus标准库_cmath菜鸟教程.pdf">CPlus标准库_cmath菜鸟教程.pdf</a><br><a href="/images/IOpdf/CPlus标准库_菜鸟教程.pdf">CPlus标准库_菜鸟教程.pdf</a><br><a href="/images/IOpdf/cplus类的对象作为方法参数类作为参数传递-CSDN博客.pdf">cplus类的对象作为方法参数类作为参数传递-CSDN博客.pdf</a><br><a href="/images/IOpdf/CppSTL之map详解CSDN博客.pdf">CppSTL之map详解CSDN博客.pdf</a><br><a href="/images/IOpdf/Cpp内存管理库new菜鸟教程.pdf">Cpp内存管理库new菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp容器类 deque菜鸟教程.pdf">Cpp容器类 deque菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp容器类 map菜鸟教程.pdf">Cpp容器类 map菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp容器类queue菜鸟教程.pdf">Cpp容器类queue菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp容器类stack菜鸟教程.pdf">Cpp容器类stack菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp容器类unordered_map菜鸟教程.pdf">Cpp容器类unordered_map菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp容器类vector菜鸟教程.pdf">Cpp容器类vector菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp数据结构菜鸟教程.pdf">Cpp数据结构菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp标准库string菜鸟教程.pdf">Cpp标准库string菜鸟教程.pdf</a><br><a href="/images/IOpdf/Cpp栈的应用逆波兰式的实现CSDN博客.pdf">Cpp栈的应用逆波兰式的实现CSDN博客.pdf</a><br><a href="/images/IOpdf/Cpp算法库algorithm菜鸟教程.pdf">Cpp算法库algorithm菜鸟教程.pdf</a><br><a href="/images/IOpdf/cpp类.pdf">cpp类.pdf</a><br><a href="/images/IOpdf/CpulsSTL教程菜鸟教程.pdf">CpulsSTL教程菜鸟教程.pdf</a><br><a href="/images/IOpdf/C_Cpp万能头文件Dotcpp编程社区.pdf">C_Cpp万能头文件Dotcpp编程社区.pdf</a><br><a href="/images/IOpdf/C容器类list菜鸟教程.pdf">C容器类list菜鸟教程.pdf</a><br><a href="/images/IOpdf/C语言CPlus常用头文件总结适用于程序设计竞赛CSDN博客.pdf">C语言CPlus常用头文件总结适用于程序设计竞赛CSDN博客.pdf</a><br><a href="/images/IOpdf/C语言文件操作含详细步骤CSDN博客.pdf">C语言文件操作含详细步骤CSDN博客.pdf</a><br><a href="/images/IOpdf/C语言的基本输入与输出函数全解CSDN博客.pdf">C语言的基本输入与输出函数全解CSDN博客.pdf</a><br><a href="/images/IOpdf/struct.pdf">struct.pdf</a><br><a href="/images/IOpdf/struct初始化.pdf">struct初始化.pdf</a><br><a href="/images/IOpdf/vector.pdf">vector.pdf</a><br><a href="/images/IOpdf/一文看懂哈希表并学会使用CPlusSTL 中的哈希表_哈希表有哪些函数_CSDN博客.pdf">一文看懂哈希表并学会使用CPlusSTL 中的哈希表_哈希表有哪些函数_CSDN博客.pdf</a><br><a href="/images/IOpdf/二叉树中的最大路径和力扣.pdf">二叉树中的最大路径和力扣.pdf</a><br><a href="/images/IOpdf/二叉树深度.jpg">二叉树深度.jpg</a><br><a href="/images/IOpdf/二叉树的层平均值.pdf">二叉树的层平均值.pdf</a><br><a href="/images/IOpdf/二叉树的最近公共祖先力扣.pdf">二叉树的最近公共祖先力扣.pdf</a><br><a href="/images/IOpdf/从前序与中序遍历序列构造二叉树.pdf">从前序与中序遍历序列构造二叉树.pdf</a><br><a href="/images/IOpdf/关于gets_scanf_gets读取回车CSDN博客.pdf">关于gets_scanf_gets读取回车CSDN博客.pdf</a><br><a href="/images/IOpdf/图CPlus实现CSDN博客2.pdf">图CPlus实现CSDN博客2.pdf</a><br><a href="/images/IOpdf/图CPlus实现_c实现图CSDN博客.pdf">图CPlus实现_c实现图CSDN博客.pdf</a><br><a href="/images/IOpdf/图的存储结构邻接矩阵与邻接表及其CPlus实现博客园.pdf">图的存储结构(邻接矩阵与邻接表)及其CPlus实现博客园.pdf</a><br><a href="/images/IOpdf/数据结构CPlus二叉树的遍历_递归和非递归及一些简单操作CSDN博客.pdf">数据结构CPlus二叉树的遍历_递归和非递归及一些简单操作CSDN博客.pdf</a><br><a href="/images/IOpdf/数据结构二叉搜索树详解CSDN博客.pdf">数据结构二叉搜索树详解CSDN博客.pdf</a><br><a href="/images/IOpdf/算法之动态规划总结11种dp算法CSDN博客.pdf">算法之动态规划总结11种dp算法CSDN博客.pdf</a><br><a href="/images/IOpdf/类初始化.pdf">类初始化.pdf</a></p><blockquote><p>reference</p></blockquote><p> 菜鸟教程 <a href="https://www.runoob.com/">https://www.runoob.com/</a><br> AI算法工程师手册(华校专) <a href="https://www.huaxiaozhuan.com/">https://www.huaxiaozhuan.com/</a><br> 代码随想录 <a href="https://www.programmercarl.com/">https://www.programmercarl.com/</a><br> CS自学指南 <a href="https://csdiy.wiki/">https://csdiy.wiki/</a><br> 上交生存手册 <a href="https://survivesjtu.gitbook.io/survivesjtumanual">https://survivesjtu.gitbook.io/survivesjtumanual</a><br> THU手册 <a href="https://yourschool.cc/thubook/">https://yourschool.cc/thubook/</a></p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Multi-agent DRL</title>
      <link href="/2024/06/27/Multi-agent%20DRL/"/>
      <url>/2024/06/27/Multi-agent%20DRL/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_42192693/article/details/124164161">多智能体强化学习：基本概念，通信方式，IPPO，MADDPG_maddpg的通信-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/584412178">Multi-Agent Reinforcement Learning is A Sequence Modeling Problem - 知乎 </a></p><p><a href="https://zhuanlan.zhihu.com/p/490373525">强化学习中“策略梯度定理”的规范表达、推导与讨论 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/349092158">多智能体强化学习路线图 (MARL Roadmap) - 知乎 (zhihu.com)</a></p><hr><p><a href="http://t.csdnimg.cn/XLOlr">强化学习 | 策略梯度 | Natural PG | TRPO | PPO</a>的Natural PG，需要了解<a href="https://blog.csdn.net/qq_29745719/article/details/127479715">自然梯度</a></p><p><a href="https://ai-chen2050.github.io/post/2021/07/28/natural-gradient/">自然梯度下降 | Blake Chan (ai-chen2050.github.io)</a></p><p>引出了各种基于导数的数值迭代优化方法（最速下降、梯度下降、牛顿法、自然梯度）</p><p><a href="https://www.bilibili.com/video/BV1N3411N7jP/?share_source=copy_web&amp;vd_source=1a5ac5d55ef25e33a1c36c75b3fe43f0">TRPO系列讲解（三）梯度下降法、最速下降法、牛顿法、自然梯度法</a></p><p><a href="https://www.cnblogs.com/hjd21/p/16601476.html">最速下降法、牛顿法、共轭梯度法原理及对比 - 无发可理的理发师 - 博客园 (cnblogs.com)</a> </p><p><a href="http://t.csdnimg.cn/icqry">机器学习-牛顿迭代法原理和公式推导</a></p><p><a href="https://www.cnblogs.com/shine-lee/p/11715033.html">方向导数、梯度、多元微分、高阶微分</a></p><p><a href="https://www.bilibili.com/video/BV1uT4y167Zw/?share_source=copy_web&amp;vd_source=1a5ac5d55ef25e33a1c36c75b3fe43f0">TRPO系列讲解（一）欧式空间与黎曼空间</a></p><p><a href="https://zhuanlan.zhihu.com/p/485274883">梯度下降法与最速下降法的区别 - 知乎 (zhihu.com)</a></p><p>由于最速下降法的单位向量v涉及到范数为1，对应不同的优化方法，引入了线性代数的问题，p-范数是$C^n$或者$R^n$空间的常用范数定义。</p><p><a href="https://blog.csdn.net/qq_34099953/article/details/84190508">深刻理解空间（线性空间，度量空间，赋范空间，线性赋范空间，内积空间，巴拿赫空间以及希尔伯特空间）_度量空间 复返空间-CSDN博客</a></p><p>最速下降法只能保证，θ在很小邻域内，沿着某一个方向，Loss下降是最快的，不能保证全局最快，因此需要一个度量来约束θ在小邻域内。</p><p>自然梯度法和梯度下降法不同：梯度下降法是欧式空间L2范数定义下的最速下降法，要保证$||v||_2=1$情况下，Loss尽可能多的下降(参考方向导数推出梯度）。<a href="https://zhuanlan.zhihu.com/p/67564794">而沿着坐标轴下降，则是让$||v||_1=1$情况下的最速下降法</a>，1-范数对应的内积运算也不一点。只有而在基于策略的强化学习中，我们的要求是，在策略改变的尺度固定或者尽可能小的情况下，实现优化目标（如PPO的优化目标）尽可能最大（小）。这里的策略改变尺度，就不能用策略网络的参数θ衡量，比如用θ的n维欧式距离衡量Δθ，因为θ改变一点，就可能引起网络输出的巨大改变。因此，自然梯度的思路，就是要保证在策略网络输出分布的改变（KL散度），在一次迭代下降中改变不大，这种情况下，让Loss下降最快。<a href="https://www.bilibili.com/video/BV1N3411N7jP/?share_source=copy_web&amp;vd_source=1a5ac5d55ef25e33a1c36c75b3fe43f0">【TRPO系列讲解】（三）梯度下降法、最速下降法、牛顿法、自然梯度法</a>。也就是用KL散度代替范数，或者说用黎曼流形上fisher信息矩阵这个度量代替代替范数，让策略输出分布尽可能小的情况下，实现Loss最大程度下降。</p><hr><p>HATRPO是异构多智能体的信任区域策略优化，因此先了解<a href="https://www.bilibili.com/video/BV1Q54y1Z7ts/?share_source=copy_web&amp;vd_source=1a5ac5d55ef25e33a1c36c75b3fe43f0">单智能体的TRPO（trust region policy optimisation)</a>。</p><p><a href="http://t.csdnimg.cn/EYgaz">TRPO，引出后来的PPO</a>,虽然在easy-rl蘑菇书上，介绍的PPO的思想（重要性采样+KL散度为了限制重要性采样的方差），和TRPO论文解读中的思想（重要性采样+增量式reward目标函数+自然梯度为了防止策略剧烈震荡）相差有点大。因为TRPO用KL散度，做约束条件下的优化，是为了防止策略剧烈震荡；而PPO用KL散度，书上的解释是为了减小目标函数采样计算的方差，也是为了增加稳定性。</p><p>关于自然策略梯度 -&gt; TRPO。 自然策略梯度，是把梯度更新的方向，直接写在更新的表达式中，在策略分布改变&lt;ε 下，实现loss最快下降。而TRPO中，trust region引入了策略分布KL散度的约束，从这个角度出发，正好把自然策略梯度那一套理论用上了。</p><hr><p><a href="https://blog.csdn.net/qq_45832958/article/details/123644900">HATRPO </a></p><p><a href="https://blog.csdn.net/weixin_39891381/article/details/105153867">论文笔记 General Advantage Estimation（GAE）-CSDN博客</a></p><p>hi-MADRL论文中的基线方法：<a href="https://blog.csdn.net/dgvv4/article/details/129642196">【深度强化学习】(8) iPPO 模型解析，附Pytorch完整代码_ippo算法-CSDN博客</a></p><p>hi-MADRL论文中copo插件：<a href="https://blog.csdn.net/wxc971231/article/details/126443950">论文理解 【CoPO】Learning to Simulate SDP System with Coordinated Policy Optimization_learning to simulate self-driven particles system -CSDN博客</a>，eoi插件：像是基本的内在好奇心模块</p><p>拉格朗日乘子法在不等式约束下，使用KKT条件是求解约束优化问题的，重要方法</p>]]></content>
      
      
      <categories>
          
          <category> DRL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DRL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Single-Agent DRL</title>
      <link href="/2024/05/26/Single-Agent%20DRL/"/>
      <url>/2024/05/26/Single-Agent%20DRL/</url>
      
        <content type="html"><![CDATA[<ul><li><p>马尔可夫奖励过程（有解析解的价值函数V）、马尔可夫决策过程（有动作）（离散+有模型）(预测和控制)。</p></li><li><p>预测问题，可将mk决策过程转化为mk奖励过程，求出解析解/数值迭代。控制过程，有策略迭代和价值迭代两种，本质上都是显示求价值，隐式学策略，因此，都是基于价值的解法。</p></li><li><p>策略迭代的价值函数V是单调递增，可数学证明。价值迭代基于动态规划，最终可收敛到正确值，可理论论证。</p></li><li><p>免模型（p(s’|a,s)未知，r(a,s)未知，需要大量与环境交互，采样来近似），不是mk决策过程。</p></li><li><p>免模型的预测/策略评估方法：蒙特卡洛，时序差分，n步时序差分。有模型是动态规划+线性代数求解析解。免模型评估的思路是：通过大量采样，来逼近有模型的价值函数迭代公式。</p></li><li><p>免模型的控制：sarsa和q-learning。sarsa是通过大量采样，来逼近Q函数的依照概率的迭代公式（贝尔曼方程），大数定律决定可以大量采样逼近期望（贝尔曼期望方程）。时序差分评估+ε贪心决策控制。区别在于异同策略（更新Q的公式不同，max可看成用最优贝尔曼方程更新，q-learning不需要采样逼近期望）。可数学公式证明，使用ε-贪心决策，Q价值函数在迭代中单增。</p></li><li><p>表格型方法:有模型的离散的mk决策过程、免模型控制。只要是离散的，要填Q表格，基于价值的算法，都是表格型方法。</p></li><li><p>策略梯度：通过大量采样，逼近回报的期望，梯度上升最大化期望。可以把乘积运算，转化成对数求和，用交叉熵作为损失函数。添加基线是因为怕采样不够，使用恰当的奖励系数（优势函数），也是怕采样不充分。蒙特卡罗策略梯度是最基础的策略梯度，它逆序求Gt。（REINFORCE）</p></li><li><p>策略梯度从回报的均值出发，推导公式。因为大量采样逼近均值的假设条件难以达到，做出添加基线+恰当奖励系数的修正。最终从损失函数的梯度公式反推出<strong>对数求和形式的损失函数</strong>。损失函数前的Gt（优势函数），可以看成对每一个采样到的（s，a）状态动作对的对数概率值梯度前的加权系数，奖励为正则增大概率，奖励越大梯度越大。奖励为负，则梯度为负。</p></li><li><p>PPO：同策略的策略梯度，通过重要性采样，一边大量采样，一边学习。通过梯度公式，可以反推出<strong>重要性采样之后的损失函数</strong>。ppo两个策略：惩罚和裁剪，都是防止两个策略网络输出的动作分布差距过大，导致方差过大，进而导致采样不充分会导致的严重不稳定后果。实际上，PPO和蒙特卡洛策略梯度，都不是对一个轨迹做优化，而是对一个状态动作对，计算期望回报并做梯度更新。</p></li><li><p>PPO：损失函数（优化目标）是随机变量R（回报/优势函数）的均值，最后是大量采样离散化近似。在公式推导中，要格外注意 随机变量取均值，随机变量取均值离散化近似，随机变量取均值和求导换序。</p></li></ul><script type="math/tex; mode=display">\frac{1}{N} \sum_{n=1}^{N} \sum_{t=1}^{T_{n}} \underline{R\left(\tau^{n}\right)} \log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right) \longleftrightarrow \frac{1}{N} \sum_{n=1}^{N} \sum_{t=1}^{T_{n}} \underline{R\left(\tau^{n}\right)} \nabla \log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right)</script><ul><li><p>如上左是mc策略梯度的优化目标，右是求梯度结果。 它的意图很明显，那个动作后续的总汇报大，就加大那个动作概率。<br>下式数值约等，但不全等。因为$\left[R(\tau)  \log p_{\theta}(\tau)\right]$ 是一个由参数θ决定的分布，而他的均值则是θ的函数。在采样求均值的过程中，在数值上近似，但是这个关于θ的函数发生了变化，只是当前θ的取值，使得二者数值上是近似的。因此，对θ取梯度时，肯定是不等的。也正是这个采样导致了约等号的出现，也导致了只能采样一次更新一次。不然θ值改变之后，二者在数值上就不是近似的，就不能拿来更新梯度。</p><script type="math/tex; mode=display">\frac{1}{N} \sum_{n=1}^{N} \sum_{t=1}^{T_{n}} R\left(\tau^{n}\right)  \log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right) \\= \frac{1}{N} \sum_{n=1}^{N} R\left(\tau^{n}\right)  \log p_{\theta}\left(\tau^{n}\right) \\\approx  \mathbb{E}_{\tau \sim p_{\theta}(\tau)}\left[R(\tau)  \log p_{\theta}(\tau)\right]</script></li><li><p>实际上，损失函数$\frac{1} {N} \sum_{n=1}^{N} \sum_{t=1}^{T_{n} } \underline{R\left(\tau^{n}\right)} log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right)$既不是R的均值，也是 $\left[R(\tau)  \log p_{\theta}(\tau)\right]$的均值（如下式所示），他只是R的均值通过采样的近似。这里的损失函数求出梯度，只是采样得到的用来近似期望回报的方式，因为并不能实际求出期望回报然后求梯度。</p></li></ul><script type="math/tex; mode=display"> \begin{array}{l} \nabla \mathbb{E}_{\tau \sim p_{\theta}(\tau)}\left[R(\tau)  \log p_{\theta}(\tau)\right] \\ = \nabla \sum_{\tau} \underline{R\left(\tau\right)}p_\theta(\tau)  \log p_{\theta}\left(\tau\right)\\ = \sum_{\tau} \underline{R\left(\tau\right)}p_\theta(\tau) \nabla \log p_{\theta}\left(\tau\right)+ \sum_{\tau} \underline{R\left(\tau\right)}\nabla p_\theta(\tau)  \log p_{\theta}\left(\tau\right)\\=\mathbb{E}_{\tau \sim p_{\theta}(\tau)}\left[R(\tau)  \log \nabla p_{\theta}(\tau)\right] +\sum_{\tau} \underline{R\left(\tau\right)}\nabla p_\theta(\tau)  \log p_{\theta}\left(\tau\right)\\=\frac{1}{N} \sum_{n=1}^{N} R\left(\tau^{n}\right)  \log \nabla p_{\theta}\left(\tau^{n}\right)+\sum_{\tau} \underline{R\left(\tau\right)}\nabla p_\theta(\tau)  \log p_{\theta}\left(\tau\right)\\=\frac{1}{N} \sum_{n=1}^{N} \sum_{t=1}^{T_{n}} R\left(\tau^{n}\right)  \nabla \log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right)+\sum_{\tau} \underline{R\left(\tau\right)}\nabla p_\theta(\tau)  \log p_{\theta}\left(\tau\right)\end{array}</script><ul><li>PPO的损失函数，是从单个状态动作对的期望回报的梯度公式 ，添加重要性采样的权重，开始反向推到的, 最后一步是均值和不定积分的换序。</li></ul><script type="math/tex; mode=display">\mathbb{E}_{\left(s_{t}, a_{t}\right) \sim \pi_{\theta^{\prime}}}\left[\frac{p_{\theta}\left(s_{t}, a_{t}\right)}{p_{\theta^{\prime}}\left(s_{t}, a_{t}\right)} A^{\theta}\left(s_{t}, a_{t}\right) \nabla \log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right)\right] \\=\mathbb{E}_{\left(s_{t}, a_{t}\right) \sim \pi_{\theta^{\prime}}}\left[\frac{p_{\theta}\left(a_{t} \mid s_{t}\right)}{p_{\theta^{\prime}}\left(a_{t} \mid s_{t}\right)} A^{\theta^{\prime}}\left(s_{t}, a_{t}\right) \nabla \log p_{\theta}\left(a_{t}^{n} \mid s_{t}^{n}\right)\right]        \\求上面随机变量均值的原函数=\mathbb{E}_{(s_t,a_t)\sim\pi_{\theta^{\prime}}}\left[\frac{p_\theta\left(a_t|s_t\right)}{p_{\theta^{\prime}}\left(a_t|s_t\right)}A^{\theta^{\prime}}\left(s_t,a_t\right)\right]</script><ul><li><p>其实可以不用这么麻烦，直接将 重要性采样的权重加在$\mathbb{E}_{(s_t,a_t)\sim\pi_{\theta^{\prime} } } \left[A^{\theta^{\prime} }\left(s_t,a_t\right)\right]$这个随机变量均值中即可，因为这个是单个状态动作对的回报期望，就是要梯度上升的目标，而重要性采样就是影响了这个期望。<br>因为RL解决问题具有动态规划的最优子结构性，因此每一个状态动作对都达到了回报均值的最大值，整体也就达到最值。</p></li><li><p>DQN是Qlearning的变体，都基于价值的算法，是广义策略迭代，它显式学习Q价值函数，隐式地通过Q函数ε-贪心地学习策略。可以数学证明ε-贪心，这种策略迭代是可以保证Q价值函数是单增的。DouleQ是因为Q表格更新简单，而用Q网络拟合Q函数需要梯度下降的特殊技巧，通过固定targetQ，更新另一个Q，使得优化过程更稳定。经验回访技巧是将历史采样的记录放在缓存池，当前更新Q网络的数据不一定是来自当前策略，还可能是旧的策略，这种做法是妥妥的异策略。<a href="https://blog.csdn.net/athrunsunny/article/details/126976433">DQN回放池是异策略</a>。it works。</p></li><li><p>为什么PPO异策略采样，需要添加权重，而DQN不需要添加权重，可以直接学习旧的策略采样的经验？因为更新的目标公式不同。</p><p>$Q_\pi(s,a)=\mathbb{E}_\pi\left[r_{t+1}+\gamma Q_\pi\left(s_{t+1},a_{t+1}\right)\mid s_t=s,a_t=a\right]$,这是Q网络更新的贝尔曼期望方程。</p><p>$Q_\pi(s,a)=R(s,a)+\gamma\sum_{s’\in S}p\left(s’\mid s,a\right)V_\pi\left(s’\right)$这是离散近似的公式。</p><p>可以看到，R(s,a)是确定的，sarsa在$Q_{t+1}$前没有max，因此sarsa需要大量采样，得到对于$Q_{t+1}$的期望的近似。而DQN是q-learning的变体。因为q-learning是在$Q_{t+1}$有max操作，类似于用贝尔曼最优方程更新（在最终收敛条件下，贝尔曼最优方程是成立的），它不需要大量采样来逼近期望，他选择最大值。所以q-learning是因为1.$r_{t+1}$来自环境是确定的2.max取值不需要求期望，因此q-learning不需要大量数据来逼近Q的贝尔曼期望方程的迭代。因此，即使DQN的经验回访池中有历史的差别很大的策略采样的记录（s,a,r,s’,a’)也没关系，因为不要求使用当前的策略pi大量采样来近似。另外历史数据中可能保留$Q_{t+1}$中更大的值，是的max$Q_{t+1}$更加准确，样本更加丰富。 </p><p>对于DQN的经验回访中有记录来自异策略的问题是，因为策略不一样，因此对于一些Q(s,a)的更新频率不同，因为只有采样到（s,a,r,s’,a’)才能更新Q（s，a）。对于更新公式是没有影响的，因为使用max更新，采样到的记录频率分布不同，并不影响更新公式，只有没有采样不到最大的Q值，才影响Q网络的更新准确性。</p><p>而PPO中，很明显要优化的目标是$\mathbb{E}_{(s_t,a_t)\sim\pi_{\theta^{\prime}}}\left[A^{\theta^{\prime}}\left(s_t,a_t\right)\right]$，当策略不同时，很明显从该状态动作出发得到的优势函数（回报）是不同的。因此需要用当前的策略，大量采样，得到对该优化目标（是一个随机变量的均值）的近似，因此需要加重要性采样的权重。</p></li><li><p>DQN的不足，rainbow，只是优化了一些训练的问题，对于q-learning的理论没有优化。</p></li><li><p>对于DQN找argmax a困难的问题，怎么针对连续动作寻找argmax a？采样，梯度上升，改变网络架构，演员评论员算法。</p></li><li><p>优势演员评论员算法：是策略梯度的变体。用V网络代替原来的优势函数，原来优势函数是通过大量采样来逼近期望回报的，现在用评论员（基于价值的算法）（Q/V网络）直接输出优势函数的期望，更稳定。策略网络和V网络耦合：为了对s的输入特征编码相同。异步优势演员-评论员算法：相当于多线程更新网络，而没有使用类似于PPO的异策略。</p></li><li><p>路径衍生梯度策略:是DQN的变体。主要解决 动作的连续性问题（argmax困难）。通过固定Q，更新策略网络，使得Q网络最大，此时策略网络就相当于经过了argmax $\pi$的策略迭代。此时策略网络相当于生成对抗网络的生成器，Q网络相当于生成对抗网络的判别器。</p></li><li><p>对稀疏奖励，设计奖励：设置内在好奇心（加强探索），课程学习（由简入难），分层强化学习。</p></li><li><p>模仿学习：解决没有奖励函数的问题，行为克隆（监督学习），逆强化学习（设计出奖励函数，通过生成对抗思路），第三人称模仿学习。</p></li><li><p>DDPG（<strong>deep deterministic policy gradient</strong>，深度确定策略梯度），是PDPG（<strong>pathwise derivative policy gradient</strong>，路径衍生策略梯度）的一种实现，可查看<a href="https://rail.eecs.berkeley.edu/deeprlcoursesp17/docs/lec7.pdf">Policy Gradient Methods: Pathwise Derivative Methods and Wrap-up (berkeley.edu)</a>，<a href="https://datawhalechina.github.io/easy-rl/#/chapter9/chapter9">第九章 演员-评论员算法 (datawhalechina.github.io)评论区留言</a>。主要是为了解决DQN难以处理连续动作的问题。DDPG可以看成一种类似生成对抗网络。通过优化策略网络，来进行广义策略迭代，选取$\pi_{i+1}(s)=\arg\max_aQ_{\pi_i}(s,a)$。 </p></li></ul><blockquote><p>Acknowledgement:参考蘑菇书，整理出这样的RL学习路线</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DRL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DRL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一种动作捕捉系统下的单目相机内参标定方法</title>
      <link href="/2023/12/27/%E4%B8%80%E7%A7%8D%E5%8A%A8%E4%BD%9C%E6%8D%95%E6%8D%89%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%8D%95%E7%9B%AE%E7%9B%B8%E6%9C%BA%E5%86%85%E5%8F%82%E6%A0%87%E5%AE%9A%E6%96%B9%E6%B3%95/"/>
      <url>/2023/12/27/%E4%B8%80%E7%A7%8D%E5%8A%A8%E4%BD%9C%E6%8D%95%E6%8D%89%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%8D%95%E7%9B%AE%E7%9B%B8%E6%9C%BA%E5%86%85%E5%8F%82%E6%A0%87%E5%AE%9A%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="相机内参标定"><a href="#相机内参标定" class="headerlink" title="相机内参标定"></a>相机内参标定</h2><p>相机内参标定即获取相机自身参数的过程，一般包含焦距、主点坐标以及畸变参数，这些参数决定了相机的投影中心。相机内参标定是计算机视觉领域的基础，是视觉定位、目标识别等领域的关键技术之一。</p><p>目前为止在工业界应用最为广泛的相机内参标定方法为棋盘格标定法。棋盘格标定法通过拍摄带有规则方格图案的棋盘格，并利用这些方格的几何特征来计算相机的内参。该方法通常需要从多个角度拍摄棋盘格，以确保摄像头能够捕捉到足够多的信息来求解内参。棋盘格标定法简单易行，计算精度较高，因此得到了广泛应用。</p><p>动作捕捉系统因其精准的空间定位能力，广泛应用于影视制作、虚拟现实等领域。通过在动作捕捉系统中创建相机刚体，可以准确获取相机的位置和姿态，这在运动分析和三维重建中非常有用。然而，传统的标定方法，如棋盘格标定法等，不适用于动作捕捉系统中的相机刚体的内参标定。因为在动作捕捉系统中，相机的刚体中心与相机的投影中心不重合，导致无法正确获取相机刚体的内部参数。</p><h2 id="现有技术的问题"><a href="#现有技术的问题" class="headerlink" title="现有技术的问题"></a>现有技术的问题</h2><figure style="text-align: center;">  <img src="/images/标定附图/p1.jpg" width="90%" height="90%"  />  <figcaption>1 动作捕捉系统示意图</figcaption></figure><p>目前的棋盘格标定方法在动作捕捉系统中的应用存在明显局限性。这是因为在动作捕捉系统中，相机的刚体中心与相机的光心不重合，导致传统方法无法准确获取相机的内部参数。这种不准确性直接影响了后续图像处理和三维重建任务的效果和效率。</p><p>具体来说，使用传统棋盘格标定方法在动作捕捉系统中进行内参标定时，必须设计额外的机械结构以尽可能使相机刚体中心与光心重合。这样的设计不仅增加了系统的复杂性和成本，还可能引入更多的误差和不稳定因素，影响标定结果的可靠性。</p><p>本文旨在解决上述技术问题，提出了一种针对动作捕捉系统的相机刚体内参标定方法。该方法能够准确获取动作捕捉场景下相机刚体的内参，无需额外的机械结构设计，从而简化系统架构，降低成本，并提升标定精度。通过本文的方法，能够显著提高图像处理和三维重建任务的准确性和效率，从而提升整个动作捕捉系统的性能和稳定性。</p><h2 id="技术方法的详细阐述"><a href="#技术方法的详细阐述" class="headerlink" title="技术方法的详细阐述"></a>技术方法的详细阐述</h2><p>本文专注于如何在动作捕捉系统下实现刚体相机的内参标定任务，这是在动捕系统下实现三维重建、虚拟现实等关键应用的重要基础。</p><p>动作捕捉系统（Motion Capture System）是一种广泛用于记录和分析人体或其他物体动态运动信息的装置。最常用的为光学动作捕捉，使用多个摄像机围绕捕捉区域，以捕获空间内反光标记球的动作。这些标记反射摄像机发出的光线，从而创建出动作的三维数据。借助动捕系统可以很方便的获取空间内任何一个标记点在世界坐标系下的三维位置信息，也能够根据多个标记点创建刚体并获取刚体的六个自由度的位置姿态信息。在本实例所使用的动捕系统如图1所示。</p><p>相机内参是指与相机的光学特性相关的参数，包括焦距、主点坐标、畸变系数等，其中焦距描述的是相机光学中心和成像平面的距离，主点坐标指的是成像平面上，光轴与该平面交点的位置。相机外参是指相机在世界坐标系统中的方向和位置，通常方向用旋转矩阵表示，而位置使用三维坐标来定位。这些参数对于精确的图像处理和三维重建至关重要。在动作捕捉系统中，通过创建相机刚体，可以实时获取相机刚体中心的位置以及相对于捕捉空间的姿态,进而同步更新外参。这种方法允许在动态环境中维持高度的精度和响应速度，从而提高整个系统的效率和效果。</p><p>相机成像是指将3D空间中的点投射到二维图像平面上的过程。这一过程涉及复杂的几何和数学变换，并需要提供精确的相机的内参以及外参。为了更加清楚的说明该过程，以及传统方法在动作捕捉系统下的劣势，下面本文将通过图2(a)来进行说明。</p><figure style="text-align: center;"><div style="display: flex; justify-content: center;">         <img src="/images/标定附图/p2a.jpg" width="90%" height="90%" />        <img src="/images/标定附图/p2b.jpg" width="90%" height="90%" />    </div>  <figcaption>2 动捕系统下的相机成像模型</figcaption></figure><p>图2(a)所示为经典的小孔成像模型，在不考虑畸变的情况下，给定一个世界坐标系下的点 $P(X,Y,Z)$，其在像素坐标系下的坐标的$p(u,v,1)$ 推导如公式$\eqref{1}$所示。</p><script type="math/tex; mode=display">\left\{\begin{array}{ccc}p=K(RP+t) \\K=\begin{pmatrix}f_x & 0 & c_x & 0 \\0 & f_y & c_y & 0 \\0 & 0 & 1 & 0\end{pmatrix} \\R|t=\begin{pmatrix}R_{11} & R_{12} & R_{13} & t_x \\R_{21} & R_{22} & R_{23} & t_y \\R_{31} & R_{32} & R_{33} & t_z \\0 & 0 & 0 & 1\end{pmatrix}\end{array}\right. \tag{1}\label{1}</script><p>空间点$P(X,Y,Z)$ 首先通过相机的外参得到相机坐标系下点 $P_c(X_c,Y_c,Z_c,1)$的坐标$P_c=RP+t$ ，随后通过比例因子$Z_c$得到归一化平面下的 的坐标，最后通过相机内参得到像素坐标系下 $P_{c}{}^{\prime}\left({\frac{X_{c}}{Z_{c}}},{\frac{Y_{c}}{Z_{c}}},1,{\frac{1}{Z_{c}}}\right)$的坐标 $p=KP_c’$。</p><p>其中， $R|t$描述了相机的外参，$K$ 代表相机的内参, $Z_c$为相机坐标系下点$p(u,v,1)$ 在相机坐标系下的$Z$ 方向坐标值。 </p><p>在传统的棋盘格标定法中，通常假设相机的光学中心与相机坐标系的原点重合，且相机坐标系的Z轴与光轴一致。然而，在动作捕捉系统中，这样的假设难以满足,如图2(b)所示。在动作捕捉系统中，相机的刚体位姿是与刚体中心绑定的。若直接将这一位姿用作变换矩阵 ，则经过变换后的相机坐标系中心将与相机刚体中心重合。如果相机刚体中心与相机的光学中心不一致，这种处理方式将导致投影错误，如图2(a)中 $p_1$和 $p_2$存在的投影偏差所示。</p><p>针对这个问题，往往可以通过将标记点放到相机的特定位置，从结构上保证相机上的标记点所构成的刚体与相机光学中心大致重合，但是这种方式需要额外的机械结构设计，并且可能导致相机操作复杂化，增加系统的重量和成本。此外，即使通过精心设计，标记点与光学中心的对齐也难以达到完全精确，仍可能引入小的误差，影响最终的标定精度。</p><p>相比之下，本文提供了一种更加简便和高效的内参标定方法，能够在不增加额外机械结构的情况下，准确地获取相机的内参。该方法基于动作捕捉系统提供的高精度位姿数据，结合数学优化算法实现相机参数的精确标定。下面将详细展开说明。<br>相机刚体创建：具体来说，在动捕系统下相机刚体可以通过在相机上粘贴一定数量的标定点，并配合特定动捕软件操作来实现。示例性的，本文在图3(a)提供了一种相机刚体模型，该示例采用的是一种常见的RGBD相机，并粘贴了4个标定点。图3(b)展示了其在动捕中的刚体示意图。</p><p>标定模板设计：本文提供了一种适用于动作捕捉系统的标定模板设计方法。附图4展示了一种本文采用的标定模板，具体来说，对于一个$(w,h)$ 的标定版，需要在标定板二维平面中的 $m_1(0,0)$、$m_2(w,0)$ 、$m_3(0,h)$ 、$m_4(w,h)$ 四个位置粘贴标定点，并且需要测量其中一个标定点的距离标定版的距离 $d$，单位为m。</p><p>借助动捕系统可以获得上述四个标定点在动捕坐标系下的位置$M_1$ ，$M_2$ ，$M_3$ ，$M_4$ ，进而可以根据公式$\eqref{2}$获得标定板中任意一点 $P_{ij}$在动捕下的位置 。</p><script type="math/tex; mode=display">\left.\left\{\begin{array}{l}\mathbf{h}=\frac{M_2-M_1}{w-1} \\\mathbf{v}=\frac{M_3-M_1}{h-1} \\P_{ij}=M_1+i\cdot\mathbf{v}+j\cdot\mathbf{h}\end{array}\right.\right.\tag{2} \label{2}</script><p>其中$w$ 和 $h$分别为标定板在水平方向与垂直方向上的点数。$\bf{v}$ 和$\bf{h}$ 分别为标定板在水平方向和垂直方向的单位向量。</p><p>标定点检测：在相机视野范围内放置标定板，并通过相机拍摄模板图像，使用图像处理算法库OpenCV检测图像中的棋盘格角点，并记录其像素坐标。</p><p>几何关系建立：本文采用带畸变的小孔成像模型来建立空间点到图像像素点之间的几何映射关系。在公式$\eqref{1}$的基础上，引入畸变参数 $k_1,k_2,p_1,p_2$，最终的像素坐标系下的角点计算公式如式$\eqref{3}$所示。</p><script type="math/tex; mode=display">\begin{cases}p_{ij}=K\left(RP_{ij}+t\right)\left(1+k_1r^2+k_2r^4\right)+\binom{2p_1xy+p_2\left(r^2+2x^2\right)}{p_1\left(r^2+2y^2\right)+2p_2xy} \\P_{ij}=M+i\mathbf{v}+j\mathbf{h} & \end{cases} \tag{3} \label{3}</script><p>其中，$p_{ij}$ 是棋盘格角点坐标， $P_{ij}$为式$\eqref{2}$计算出的对应角点在世界坐标系的坐标,$r$ 为像素点到图像中心的距离，$(x,y,1)$ 为归一化平面下的坐标， $R|t$为动捕坐标系下相机刚体的位姿，$K$ 为待优化内参。</p><p>优化算法应用：本文中使用梯度下降法来优化相机的内参，通过最小化目标函数来找到最佳的参数值。根据初始估计值设定相机内参$K$ 和畸变参数$p_1,p_2,k_1,k_2$ ，其中内参 的初值可以通过奇异值分解获得，畸变参数的初值指定为1e-4。<br>目标函数的定义如式$\eqref{4}$所示，</p><script type="math/tex; mode=display">E(K,k_1,k_2,p_1,p_2)=\sum_n\sum_{ij}||p_{ij}-\hat{p}_{ij}(K,k_1,k_2,p_1,p_2)||^2\tag{4} \label{4}</script><p>其中 $n$代表有效图像的数量。 $p_{i,j}$是图像中检测到的第 $i$行 $j$列的角点的像素坐标,$\hat{p}_{ij}$ 是通过式$\eqref{3}$计算出来的投影坐标。</p><p>目标函数对参数$K,p_1,p_2,k_1,k_2$ 的梯度计算以及参数更新过程如公式$\eqref{5}$所示:</p><script type="math/tex; mode=display">\begin{gathered}K\leftarrow K-\eta\frac{\partial E}{\partial K} \\\mathrm{.}k_{1}\leftarrow k_{1}-\eta\frac{\partial E}{\partial k_{1}} \\\mathrm{k}_{2}\leftarrow k_{2}-\eta\frac{\partial E}{\partial k_{2}} \\p_{1}\leftarrow p_{1}-\eta\frac{\partial E}{\partial p_{1}} \\p_{2}\leftarrow p_{2}-\eta\frac{\partial E}{\partial p_{2}}\end{gathered} \tag{5} \label{5}</script><p>其中，$\eta$ 为学习率，表示每次更新的步长，在本文中所有参数采用同样的学习率，在实际应用中可以设置不同的学习率。重复梯度计算和参数更新，直到目标函数的值收敛到预设的阈值，或者达到最大迭代次数。</p><p>通过上述方法，可以在不增加额外机械结构的情况下，利用动作捕捉系统提供的高精度位姿数据，结合数学优化算法，实现相机参数的精确标定。</p><figure style="text-align: center;"><img src="/images/标定附图/p3a.jpg" width="90%" height="90%" />  <figcaption>3 相机装置的示意图</figcaption></figure><figure style="text-align: center;">    <div style="display: flex; justify-content: center;">         <img src="/images/标定附图/p3b.jpg" width="85%" height="85%" />        <img src="/images/标定附图/p4.jpg" width="85%" height="85%" />    </div>  <figcaption>4 棋盘格装置以及角点示意图</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相机标定 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于python的即时通讯软件开发</title>
      <link href="/2023/08/27/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
      <url>/2023/08/27/%E5%9F%BA%E4%BA%8Epython%E7%9A%84%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><h3 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h3><p>项目目的：我们的项目旨在构建一款名为<a href="https://github.com/TT2TER/Echoplex">Echoplex的实时聊天软件</a>:</p><p><strong>项目意义：</strong></p><ol><li>学习机会： 通过此项目，可以深入了解Python Socket编程和Qt框架，提高编程技能。</li><li>自定义功能： 可以根据用户的需求添加自定义功能，如文件传输、群聊、语音通话等。</li></ol><p><strong>参考资料：</strong></p><ol><li>Python Socket编程文档：<a href="https://docs.python.org/3/library/socket.html">https://docs.python.org/3/library/socket.html</a></li><li>Qt框架官方文档：<a href="https://doc.qt.io/qt-6.2/index.html">https://doc.qt.io/qt-6.2/index.html</a></li><li>《Python网络编程》（作者：Dr. M. O. Faruque Sarker和Sam Washington）：这本书介绍了Python网络编程的基础知识，包括Socket编程。</li><li>在线编程社区和论坛：如Stack Overflow，Reddit的Python板块等，</li><li>同类项目和开源即时通讯应用的源代码</li></ol><h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><p><strong>硬件环境： </strong>Linux/Windows/Mac</p><p><strong>软件环境：</strong></p><p>设备需要有摄像头与摄像头驱动<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python3<span class="number">.8</span></span><br><span class="line">numpy==<span class="number">1.24</span><span class="number">.4</span></span><br><span class="line">openai_whisper==<span class="number">20230314</span></span><br><span class="line">opencv_contrib_python==<span class="number">4.8</span><span class="number">.0</span><span class="number">.76</span></span><br><span class="line">PyAudio==<span class="number">0.2</span><span class="number">.11</span></span><br><span class="line">PyJWT==<span class="number">2.8</span><span class="number">.0</span></span><br><span class="line">PySide2==<span class="number">5.15</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line">PySide2_Fluent_Widgets==<span class="number">1.1</span><span class="number">.8</span></span><br><span class="line">rsa==<span class="number">4.9</span></span><br></pre></td></tr></table></figure></p><p>有关Pyside和whisper，请参考官方在github上的安装流程<br><a href="https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/PySide2">https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/PySide2</a><br><a href="https://github.com/openai/whisper">https://github.com/openai/whisper</a><br>由于PyAudio库较为古老，直接pip install可能报错,请尝试<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install portaudio19-dev</span><br><span class="line">sudo apt-get install python3-all-dev</span><br><span class="line">pip install pyaudio</span><br></pre></td></tr></table></figure></p><p>如果为linux系统，需要额外下载<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gtk2.0-dev and pkg-config #以进行视频通话(cv.destroyallwindows的报错)</span><br><span class="line">pip install opencv-python-headless #以解决opencv与pyside的plugin冲突导致的报错</span><br></pre></td></tr></table></figure></p><h2 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2 需求分析"></a>2 需求分析</h2><ul><li style="list-style: none"><input type="checkbox" checked></input> 用户注册：允许用户创建新帐户，提供用户名和密码，注册模块负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 用户登录：已注册用户可以使用用户名和密码登录，登录模块负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 私聊功能：允许用户与其他用户一对一聊天，需要发消息模块负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 群聊功能：支持多用户同时在一个聊天群中聊天。</li><li style="list-style: none"><input type="checkbox" checked></input> 好友请求：用户可以向其他用户发送好友请求，需要对方确认，需要好友管理模块负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 创建用户界面：使用Qt框架创建直观的用户界面，包括主窗口、聊天窗口、联系人列表等，需要qt负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 用户登录界面：提供用户友好的登录界面，包括用户名和密码输入字段需要qt和客户端沟通。</li><li style="list-style: none"><input type="checkbox" checked></input> 用户注册界面：创建用户注册界面，包括新用户的注册信息，需要qt负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 主聊天窗口：设计用于发送和接收消息的聊天窗口。</li><li style="list-style: none"><input type="checkbox" checked></input> 联系人列表：显示用户的联系人列表，包括在线状态和最新消息提示，需要登陆时拉取。</li><li style="list-style: none"><input type="checkbox" checked></input> 表情和图片消息：允许用户发送表情符号和图片。</li><li style="list-style: none"><input type="checkbox" checked></input> 文件传输：用户可以发送和接收文件，确保文件传输的可靠性和安全性，需要文件传输模块负责。</li><li style="list-style: none"><input type="checkbox" checked></input> 用户通知：当有新消息或好友请求时，向用户发送通知。</li><li style="list-style: none"><input type="checkbox" checked></input> 跨平台支持：确保即时通讯软件可以在不同操作系统上运行，如Windows、macOS和Linux。</li><li style="list-style: none"><input type="checkbox" checked></input> 数据库支持：将用户数据、消息历史记录等信息存储在数据库中，以实现持久性存储。</li><li style="list-style: none"><input type="checkbox"></input> 人脸验证支持：人脸验证可以作为二步验证，再输入密码后，进行第二次验证。<h2 id="3-概要设计"><a href="#3-概要设计" class="headerlink" title="3 概要设计"></a>3 概要设计</h2></li></ul><h3 id="系统架构："><a href="#系统架构：" class="headerlink" title="系统架构："></a>系统架构：</h3><p>Echoplex即时通讯软件可以采用客户端-服务器-客户端架构，其中客户端负责用户界面和消息发送/接收，服务器负责消息路由和用户管理。这种架构具有良好的可扩展性和性能。</p><h3 id="技术选择"><a href="#技术选择" class="headerlink" title="技术选择"></a>技术选择</h3><p>客户端： 使用Python作为主要编程语言，Qt框架用于用户界面设计。Python的Socket库用于与服务器通信。<br>服务器： 同样使用Python的Socket库实现服务器端。<br>数据存储： 使用SQLite数据库来存储用户数据和消息历史记录。SQLite是一个轻量级的嵌入式数据库，适合小型应用程序。</p><h3 id="通信协议："><a href="#通信协议：" class="headerlink" title="通信协议："></a>通信协议：</h3><p>定义一个简单的通信协议，包括消息格式、命令和状态码。协议应包括以下元素：<br>•    注册和登录： 客户端发送注册和登录请求，服务器验证用户凭据。<br>•    消息格式： 定义文本消息、图片消息和文件传输消息的格式。<br>•    命令： 包括发送消息、接收消息、添加好友、创建群聊等命令。<br>•    状态码： 用于指示请求是否成功，以及错误的类型。</p><h3 id="数据库设计："><a href="#数据库设计：" class="headerlink" title="数据库设计："></a>数据库设计：</h3><p>用户数据表（User）：<br>•    字段：用户ID（唯一标识符）、用户名、密码（加密存储）。<br>•    用户表存储所有注册用户的信息。<br>消息数据表（Message）：<br>•    字段：消息ID（唯一标识符）、发送者ID、接收者ID、消息内容、消息类型（文本、图片、文件）、发送时间等。<br>•    消息表用于存储所有消息的历史记录，包括私聊和群聊。<br>好友关系表（Friendship）：<br>•    字段：用户1 ID、用户2 ID、关系状态。<br>•    好友关系表用于存储用户之间的好友关系，以及好友请求的状态。<br>群聊数据表（GroupChat）：<br>•    字段：群聊ID、群聊名称、创建者ID、成员列表等。<br>•    群聊数据表用于存储群聊的信息，包括成员列表。</p><h3 id="核心功能描述："><a href="#核心功能描述：" class="headerlink" title="核心功能描述："></a>核心功能描述：</h3><p><strong>用户注册和登录：</strong><br>用户可以通过提供用户名和密码注册新账户。<br>已注册用户可以使用用户名和密码登录。<br><strong>用户管理和通信：</strong><br>用户可以添加好友，发送和接收即时消息。<br>用户可以创建和参与群聊，发送群聊消息。<br>实现消息的实时发送和接收，确保低延迟和可靠性。<br><strong>用户界面：</strong><br>使用Qt框架创建用户友好的界面，包括登录和注册界面、主界面、聊天窗口和联系人列表。<br>实现通知机制，通知用户有新消息或好友请求。<br><strong>文件传输：</strong><br>允许用户发送和接收文件，确保文件传输的可靠性和安全性。<br><strong>群聊支持：</strong><br>用户可以创建群聊，邀请好友加入，发送和接收群聊消息。<br><strong>视频通话</strong><br>用户可以和在线用户建立起p2p视频通话。<br><strong>人脸验证</strong><br>人脸验证可以作为二步验证，再输入密码后，进行第二次验证。<br><strong>语音识别</strong><br>基于openai-whisper的语音识别包，可以在聊天窗口直接发语音转文字。</p><h2 id="4-实现方案"><a href="#4-实现方案" class="headerlink" title="4 实现方案"></a>4 实现方案</h2><p>好友管理模块可实现增删好友，拉取好友列表和分组。<br>函数实现和流程图如下。</p><div class="table-container"><table><thead><tr><th>模块</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td><strong>Client/user_addfriend</strong></td><td>客户端请求加好友</td><td>客户端将加好友请求发送给服务器</td></tr><tr><td><strong>Server/auser/addfriend</strong></td><td>服务器处理加好友请求</td><td>服务端将好友请求转发给对方，若对方不在线，则缓存</td></tr><tr><td><strong>Client/rcv_addfriend</strong><br><strong>Client/ans_addfriend</strong></td><td>客户端处理好友请求</td><td>客户端收取好友请求，并将是否同意返回给服务器</td></tr><tr><td><strong>Sever/ans_addfriend</strong></td><td>服务器处理好友请求回复</td><td>转发好友请求结果，若对方同意，则在数据库存入好友记录</td></tr><tr><td><strong>Client/rcv_ans_addfriend</strong></td><td>客户端收取请求结果</td><td>客户端收取好友请求结果</td></tr><tr><td><strong>Client/del_friend</strong></td><td>客户端请求删除好友</td><td>客户端将删除好友的的请求发给服务器</td></tr><tr><td><strong>Server/del_friend</strong></td><td>服务端处理删除好友请求</td><td>若id存在，则更新好友数据库，否则，报错</td></tr><tr><td><strong>Client/pull_friendlist</strong></td><td>客户端请求拉取好友</td><td>客户端发起拉取好友列表和分组的请求</td></tr><tr><td><strong>Server/pull_friendlist</strong></td><td>服务端处理好友列表拉取请求</td><td>客户端交好友列表及分组信息返回给用户，若无好友则返回空</td></tr></tbody></table></div><p><img src="/images/imessage/image1.png" width="80%" height="80%" /><br><img src="/images/imessage/image2.png" width="80%" height="80%" /></p><p><strong>运行结果图如下</strong></p><p>1.请求添加好友，需要输入好友id</p><p><img src="/images/imessage/image3.jpeg" width="80%" height="80%" /></p><p>2.好友id不存在，则会报错。若好友id存在，则正常发送。<br> <img src="/images/imessage/image4.jpeg" width="80%" height="80%" /></p><p>3.用户若在线，则会直接收到好友请求，并显示未读红点。若用户不在线，则会缓存好友请求，用户上线自动收取好友请求。<br> <img src="/images/imessage/image5.jpeg" width="80%" height="80%" /></p><p>4.用户可以选择接受或者拒绝。若拒绝，则原来用户会显示“对方拒绝您的请求”。若接受则会成为好友。<br> <img src="/images/imessage/image6.png" width="80%" height="80%" /></p><p>5.接受后，对方陈工出现在好友对话窗口中。<br> <img src="/images/imessage/image7.jpeg" width="80%" height="80%" /><br>具体代码如下：</p> <div style="display: flex; justify-content: center;">     <img src="/images/imessage/image8.png"  /><img src="/images/imessage/image9.png"  /></div> <div style="display: flex; justify-content: center;"><img src="/images/imessage/image10.png"  /><img src="/images/imessage/image11.png"  /></div> <div style="display: flex; justify-content: center;"><img src="/images/imessage/image17.png" /><img src="/images/imessage/image13.png"  /></div> <div style="display: flex; justify-content: center;"><img src="/images/imessage/image14.png" /><img src="/images/imessage/image15.png" /></div> <div style="display: flex; justify-content: center;"><img src="/images/imessage/image16.png" /><img src="/images/imessage/image12.png"  /></div><h2 id="5-系统测试"><a href="#5-系统测试" class="headerlink" title="5 系统测试"></a>5 系统测试</h2><div class="table-container"><table><thead><tr><th>测试说明</th><th>测试方法</th><th>预期结果</th><th>输出</th><th>bug及解决方案</th></tr></thead><tbody><tr><td>增加记住密码功能，使用token验证登录</td><td>记住密码登录，第二次登录使用token登录</td><td>登录成功、正常进入系统</td><td>无法正常收消息</td><td>token登录后未维护服务器中在线用户列表，导致消息全进离线信箱，已解决</td></tr><tr><td>测试注册是否自动验证所输信息合法性</td><td>分别使用弱密码、非法邮箱注册</td><td>无法注册</td><td>弱密码无法注册，非法邮箱正常注册，导致无法正常使用找回密码功能</td><td>使用正则表达式验证邮箱合法性，确保用户可以使用邮箱正常找回密码</td></tr><tr><td>测试能否正常找回密码</td><td>注册新账号，使用找回密码功能</td><td>该账号邮箱收到含有账号密码的邮件</td><td>收到了sha256加密的密码，相当于还是没找回</td><td>数据库使用sha256加密存储密码导致，改用rsa加密存储密码，已解决</td></tr><tr><td>登录后拉取离线消息、群组列表和好友列表</td><td>登录一个存在离线消息、多个好友和多个群聊的账号</td><td>正常拉取消息、好友列表和群聊列表</td><td>服务器报错，无法完成登录</td><td>TCP粘连，服务器接收线程无法正常解析请求，写函数将每个JSON协议请求分离放入队列，按顺序处理请求，已解决</td></tr><tr><td>由本表4号用例可知客户端也存在潜在的TCP粘连问题</td><td></td><td></td><td></td><td>使用和服务器相同的解决办法，已解决</td></tr><tr><td>测试服务端TCP粘连问题是否解决</td><td>多个不同主机，每个主机开多个客户端，每次登录拉取离线消息、群组和聊天列表</td><td>服务器正常处理请求，不报错</td><td>一台主机无法登录第二个账号</td><td>服务器使用了单一队列导致不同线程中处理请求混乱，区分不同线程队列，已解决</td></tr><tr><td>测试TCP保活机制</td><td>分别测试客户端与服务端正常通讯情况下，服务端与客户端长期不进行请求操作，以及服务端和客户端分别各自主动异常掉线后对方是否有提示</td><td>长时间未操作双方通讯保持，各自断网后对方有掉线提醒</td><td>客户端无掉线提醒</td><td>增加类似心跳包功能，一旦客户端通讯失败后弹出异常掉线提醒，已解决</td></tr><tr><td>测试服务器与数据库正常交互</td><td>使用注册功能注册新账号</td><td>新账号注册成功、写入数据库</td><td>服务器报错，无法正常写入数据库</td><td>数据库连接不能以参数形式传入thread，已解决</td></tr><tr><td>测试创建群聊</td><td>使用同一账号多次创建群聊，多个账号多次创建群聊</td><td>根据所需正常更新数据库</td><td>同一账号只能创建一个群聊</td><td>数据库群组表中群主属性被设成”UNIQUE”，已解决</td></tr><tr><td>测试创建群聊</td><td>使用同一账号多次创建群聊，多个账号多次创建群聊</td><td>根据所需正常更新数据库</td><td>无法创建、无法更新数据库</td><td>数据库中”group”为关键字，需要加”[]”，已解决</td></tr><tr><td>测试两个用户之间收发消息</td><td>不同主机开客户端，加好友、收发消息</td><td>正常加好友、正常收发消息</td><td>正常加好友和收发消息，但缺乏提醒</td><td>收到消息后更新右侧聊天列表，已解决</td></tr><tr><td>测试收发消息提醒</td><td>不同主机开客户端，加好友、收发消息</td><td>正常加好友、正常收发消息，存在提醒</td><td>正常加好友、正常收发消息，存在提醒，但不醒目</td><td>使用小红点标注新好友请求和新消息，已解决</td></tr><tr><td>加入本地存储聊天记录功能</td><td>不同主机开客户端，加好友、收发消息，查看本地文件内是否存在聊天记录</td><td>正常通信聊天，同时以文件形式保存了聊天记录</td><td>无法收到消息了</td><td>若客户端不存在对应文件目录则导致该错误。加入是否存在目录的判断，如不存在则创建，已解决</td></tr><tr><td></td><td></td><td></td><td>某次测试下，收到好友消息后右侧聊天列表多出了一个与该好友的聊天</td><td>for循环中break缩进错误导致循环只执行一次。改正break缩进，已解决</td></tr><tr><td>测试本地存储聊天记录功能</td><td>不同主机开客户端，加好友、收发消息，查看本地文件内是否存在聊天记录</td><td>正常通信聊天，同时以文件形式保存了聊天记录</td><td>正常保存了聊天记录，但加载时时间顺序反了</td><td>聊天记录本身按时间顺序存储，读取时列表list.reverse()一下就行，已解决</td></tr><tr><td>测试收发消息后聊天框能否正常显示消息</td><td>多个主机、不同客户端间互相收发消息</td><td>聊天消息以时间顺序显示双方的聊天气泡</td><td>某些情况下无法显示好友姓名</td><td>添加新好友后未维护本地好友列表导致本地不知道好友姓名。新增添加好友后更新好友列表，已解决</td></tr><tr><td></td><td></td><td></td><td>某些情况下消息气泡不能加载</td><td>未找到好友头像导致。将头像存储相对路径改为绝对路径，已解决</td></tr><tr><td>新增拉取群聊后广播给所有群成员，并由群主自动发送”群聊已创建”的消息，测试创建群聊是否正常</td><td>不同主机、多个客户端，多次拉取群聊</td><td>正常拉取，所有群成员正常收到</td><td>某些情况下，群主无法收到创建成功的消息，也不自动发送通知</td><td>若拉取群成员时未添加群主自己，则导致此错误。服务器处理时增加判断，确保群主自己收到返回消息，已解决</td></tr><tr><td>测试群聊发送文件功能</td><td>不同主机，多个客户端拉取群聊，发送文件</td><td>所有群成员可接收本群内所有文件</td><td>群无法接收文件</td><td>收消息时不增加群聊时对文件型消息特判导致收文件与接收文本消息混淆，已解决</td></tr><tr><td>测试文件收发功能是否正常</td><td>不同主机客户端加好友后，互相收发文件</td><td>文件能正常收发和打开</td><td>可以正常收发和打开，但不醒目</td><td>添加文件收发的进度条，已解决</td></tr><tr><td>测试文件收发功能是否正常</td><td>不同主机客户端加好友后，互相收发文件</td><td>文件能正常收发和打开</td><td>某些情况下文件不能正常发送</td><td>发文件对应的功能函数结束后相应的子线程被销毁导致无法完成发送文件。在程序public(shared_module)模块中添加实例化的收发文件线程类对象，保证线程不被异常销毁，已解决</td></tr><tr><td>测试群聊发送文件功能</td><td>不同主机，多个客户端拉取群聊，发送文件</td><td>所有群成员可接收本群内所有文件</td><td>群无法接收文件</td><td>收消息时不增加群聊时对文件型消息特判导致收文件与接收文本消息混淆，已解决</td></tr><tr><td>测试上传更新头像功能</td><td>本机上传头像，测试好友是否可以自动接收、更新头像</td><td>头像可以正常发送并更新给所有好友</td><td>好友不能正常接收</td><td>服务器在接收头像时立刻将广播发送给所有好友，所有好友自动下载时服务器未完成接收新头像，导致读取到的头像filesize为0。服务器完成接收后在发送广播，已解决</td></tr><tr><td>测试上传更新头像功能</td><td>本机上传头像，测试好友是否可以自动接收、更新头像</td><td>头像可以正常发送并更新给所有好友</td><td>不能正常上传</td><td>上传了不支持的头像文件类型如webp\gif等导致。新增限制上传头像类型，已解决</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> python开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每月分享</title>
      <link href="/2023/03/17/%E6%AF%8F%E6%9C%88%E5%88%86%E4%BA%AB1/"/>
      <url>/2023/03/17/%E6%AF%8F%E6%9C%88%E5%88%86%E4%BA%AB1/</url>
      
        <content type="html"><![CDATA[<h1 id="每月分享"><a href="#每月分享" class="headerlink" title="每月分享"></a>每月分享</h1><h1 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><p>这是一个Windows下的linux子系统，占用资源小</p><blockquote><p>在Windows程序管理中，勾选允许适用于Windows的Linux子系统</p><p>这个子系统会在C:\Users\用户名\AppData\Local\Packages\Linux某发行版\LocalState增加ext4虚拟硬盘，然后映射到网络驱动器上</p><p>WSL是基于lxss（支持Linux的二进制文件服务），开机后在后台一直运行，但占用资源极少，比wallpaper engine简直是小弟弟，因此一直开着就好。如果真的很不喜欢WSL开机自启服务，可以在任务管理器的服务一栏，取消lxss的自启动，改成手动触发</p><p>Linux发行版会跑在WSL的服务上，只要关闭某一个Linux发行版的终端，并且停止所有在该终端运行的程序，该Linux服务就会自动停止，不必担心消耗资源</p><p>推荐使用Debian发行版，虚拟硬盘只有500M。我一开始使用Ubuntu，大约1G，但是要命的是Ubuntu似乎在下载starship的时候遇到了问题，解决方法异常麻烦，因此放弃该发行版</p><p>在WSL的linux发行版上，可以在/mnt发现window的文件被挂载到Linux上，因此双系统交互很方便，甚至支持命令混合输入</p><p>WSL安装的终端会自动配置在Windows terminal中</p></blockquote><h1 id="Windows-终端"><a href="#Windows-终端" class="headerlink" title="Windows 终端"></a>Windows 终端</h1><blockquote><p>Windows terminal</p></blockquote><p>windows terminal是一个可定制的，可添加多个shell的Microsoft发布的终端。</p><p>美化效果如下：</p><p><img src="/images/1.png" alt=""></p><p><img src="/images/2.png" alt=""></p><h3 id="windows-terminal美化"><a href="#windows-terminal美化" class="headerlink" title="windows terminal美化"></a>windows terminal美化</h3><p>1.修改Windows terminal的配置文件,启用背景图片，增加透明度，更换字体（推荐nerd font，因为包含很多奇奇怪怪的字体，能在终端中用到）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> </span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;backgroundImage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E:/resourse/picture/1.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;backgroundImageOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0.2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;font&quot;</span><span class="punctuation">:</span> </span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;face&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrainsMono Nerd Font Mono&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">14.0</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;opacity&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;useAcrylic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h3 id="shell美化"><a href="#shell美化" class="headerlink" title="shell美化"></a>shell美化</h3><p>2.修改cmd,powershell,git-bash,debian-bash等shell本身的配置文件，这样配置不仅可以在Windows terminal管用，在VScode中同样可以美化终端。</p><blockquote><p> VScode如果出现乱码，需要更改设置中的terminal font的值，建议在默认值后面追加所有JetBrainMono Nerd Font字体</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">JetBrainsMono</span> <span class="string">Nerd</span> <span class="string">Font,JetBrainsMono</span> <span class="string">Nerd</span> <span class="string">Font</span> <span class="string">Mono,JetBrainsMono</span> <span class="string">NF,JetBrainsMono</span> <span class="string">NFM,JetBrainsMonoNL</span> <span class="string">Nerd</span> <span class="string">Font,JetBrainsMonoNL</span> <span class="string">Nerd</span> <span class="string">Font</span> <span class="string">Mono,JetBrainsMono</span> <span class="string">NF,JetBrainsMonoNL</span> <span class="string">NFM,Consolas,</span> <span class="string">&#x27;Courier New&#x27;</span><span class="string">,</span> <span class="string">monospace</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><blockquote><p>powershell有两种选择，一种是使用oh-my-posh,另一种是使用starship</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget <span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="comment">#获取oh-my-posh</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CODE <span class="variable">$PROFILE</span> <span class="comment">#用VScode打开...</span></span><br><span class="line"><span class="comment">#追加语句</span></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh <span class="literal">--config</span> <span class="variable">$env:POSH_THEMES_PATH</span>\montys.omp.json | <span class="built_in">Invoke-Expression</span>  </span><br><span class="line"><span class="comment">#bingo</span></span><br></pre></td></tr></table></figure><p>下面用starship美化，注意先安装JetBrainMono Nerd Font字体</p><p>Windows安装starship直接去官网下载</p><p>然后增加c:/用户/.config/starship.toml,这是starship的配置文件</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下是从YouTube分享拿来的toml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ~/.config/starship.toml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inserts a blank line between shell prompts</span></span><br><span class="line"><span class="attr">add_newline</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the default prompt format</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;&quot;&quot;\</span></span><br><span class="line"><span class="string">[╭╴](238)$env_var\</span></span><br><span class="line"><span class="string">$all[╰─](238)$character&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the default prompt characters</span></span><br><span class="line"><span class="section">[character]</span></span><br><span class="line"><span class="attr">success_symbol</span> = <span class="string">&quot;[](238)&quot;</span></span><br><span class="line"><span class="attr">error_symbol</span> = <span class="string">&quot;[](238)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Shows an icon that should be included by zshrc script based on the distribution or os</span></span><br><span class="line"><span class="section">[env_var.STARSHIP_DISTRO]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&#x27;[$env_value](bold white)&#x27;</span>  <span class="comment"># removed space between distro and rest for pwsh</span></span><br><span class="line"><span class="attr">variable</span> = <span class="string">&quot;STARSHIP_DISTRO&quot;</span></span><br><span class="line"><span class="attr">disabled</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Shows the username</span></span><br><span class="line"><span class="section">[username]</span></span><br><span class="line"><span class="attr">style_user</span> = <span class="string">&quot;white bold&quot;</span></span><br><span class="line"><span class="attr">style_root</span> = <span class="string">&quot;black bold&quot;</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;[$user]($style) &quot;</span></span><br><span class="line"><span class="attr">disabled</span> = <span class="literal">true</span>  <span class="comment"># disable in powershell</span></span><br><span class="line"><span class="attr">show_always</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[directory]</span></span><br><span class="line"><span class="attr">truncation_length</span> = <span class="number">3</span></span><br><span class="line"><span class="attr">truncation_symbol</span> = <span class="string">&quot;…/&quot;</span></span><br><span class="line"><span class="attr">home_symbol</span> = <span class="string">&quot; ~&quot;</span></span><br><span class="line"><span class="attr">read_only_style</span> = <span class="string">&quot;197&quot;</span></span><br><span class="line"><span class="attr">read_only</span> = <span class="string">&quot;  &quot;</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;at [$path]($style)[$read_only]($read_only_style) &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[git_branch]</span></span><br><span class="line"><span class="attr">symbol</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;on [$symbol$branch]($style) &quot;</span></span><br><span class="line"><span class="attr">truncation_length</span> = <span class="number">4</span></span><br><span class="line"><span class="attr">truncation_symbol</span> = <span class="string">&quot;…/&quot;</span></span><br><span class="line"><span class="attr">style</span> = <span class="string">&quot;bold green&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[git_status]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&#x27;[\($all_status$ahead_behind\)]($style) &#x27;</span></span><br><span class="line"><span class="attr">style</span> = <span class="string">&quot;bold green&quot;</span></span><br><span class="line"><span class="attr">conflicted</span> = <span class="string">&quot;🏳&quot;</span></span><br><span class="line"><span class="attr">up_to_date</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="attr">untracked</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="attr">ahead</span> = <span class="string">&quot;⇡$&#123;count&#125;&quot;</span></span><br><span class="line"><span class="attr">diverged</span> = <span class="string">&quot;⇕⇡$&#123;ahead_count&#125;⇣$&#123;behind_count&#125;&quot;</span></span><br><span class="line"><span class="attr">behind</span> = <span class="string">&quot;⇣$&#123;count&#125;&quot;</span></span><br><span class="line"><span class="attr">stashed</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="attr">modified</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="attr">staged</span> = <span class="string">&#x27;[++\($count\)](green)&#x27;</span></span><br><span class="line"><span class="attr">renamed</span> = <span class="string">&quot;襁 &quot;</span></span><br><span class="line"><span class="attr">deleted</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[terraform]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;via [ terraform $version]($style) 壟 [$workspace]($style) &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[vagrant]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;via [ vagrant $version]($style) &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[docker_context]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;via [ $context](bold blue) &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[helm]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;via [ $version](bold purple) &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[python]</span></span><br><span class="line"><span class="attr">symbol</span> = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="attr">python_binary</span> = <span class="string">&quot;python3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[nodejs]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;via [ $version](bold green) &quot;</span></span><br><span class="line"><span class="attr">disabled</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ruby]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&quot;via [ $version]($style) &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[kubernetes]</span></span><br><span class="line"><span class="attr">format</span> = <span class="string">&#x27;on [ $context\($namespace\)](bold purple) &#x27;</span></span><br><span class="line"><span class="attr">disabled</span> = <span class="literal">false</span></span><br><span class="line"><span class="section">[kubernetes.context_aliases]</span></span><br><span class="line"><span class="attr">&quot;clcreative-k8s-staging&quot;</span> = <span class="string">&quot;cl-k8s-staging&quot;</span></span><br><span class="line"><span class="attr">&quot;clcreative-k8s-production&quot;</span> = <span class="string">&quot;cl-k8s-prod&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后在$PROFILE追加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Invoke-Expression (&amp;starship init powershell)</span><br><span class="line"><span class="comment">//bingo</span></span><br></pre></td></tr></table></figure><h4 id="cmd"><a href="#cmd" class="headerlink" title="cmd"></a>cmd</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">winget clink</span><br><span class="line"><span class="comment">#然后再安装Windows版本starship，配置toml</span></span><br><span class="line"><span class="comment"># 追加%LocalAppData%\clink\starship.lua </span></span><br><span class="line">load(io.popen(<span class="string">&#x27;starship init cmd&#x27;</span>):read(<span class="string">&quot;*a&quot;</span>))()</span><br></pre></td></tr></table></figure><h4 id="gitbash"><a href="#gitbash" class="headerlink" title="gitbash"></a>gitbash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#然后再安装Windows版本starship，配置toml</span></span><br><span class="line"><span class="comment">#在git安装目录的etc/bash.bashrc追加</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(starship init bash)</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="debain"><a href="#debain" class="headerlink" title="debain"></a>debain</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install curl </span><br><span class="line">curl -sS https://starship.rs/install.sh | sh <span class="comment">#安装Debian下的starship</span></span><br><span class="line">vim ~/.config/starship.toml</span><br><span class="line"><span class="comment">#写入配置</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(starship init bash)</span>&quot;</span></span><br><span class="line"><span class="comment">#bingo</span></span><br></pre></td></tr></table></figure><h1 id="解决阿里云盘1080p客户端普通用户无法访问的问题"><a href="#解决阿里云盘1080p客户端普通用户无法访问的问题" class="headerlink" title="解决阿里云盘1080p客户端普通用户无法访问的问题"></a>解决阿里云盘1080p客户端普通用户无法访问的问题</h1><blockquote><p>方案：Alist 是<strong>一个文件列表程序</strong>，它支持多种存储，支持网页浏览和WebDAV, 它也是跨平台程序，由gin 和Solidjs 支持。 用Alist 管理多个网盘非常方便。</p></blockquote><p>使用Alist，可以</p><ul><li>在网页浏览各种云盘，绕开客户端的限制，有更多的权限，例如用本地播放器播放mp4</li><li>配合WebDAV软件，可以将云盘挂载到本地磁盘 （还没做）</li><li>可以将网盘部署在服务器上，当作公共云盘使用 （还没做）</li></ul><p>Alist可以在WSL-Debian安装，也可以在Windows安装，我在Windows安装，尽量不要把WSL搞得太臃肿</p><p>在官网下载Alist Windows便携版，实际上只有一个alist.exe</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cd到alist.exe文件夹</span></span><br><span class="line">./alist.exe server <span class="comment">#在本地5244端口自动开启alist服务，手机也可以通过window ipv4地址+端口号访问</span></span><br><span class="line">./alist.exe admin <span class="comment">#获取登录账户和密码</span></span><br></pre></td></tr></table></figure><blockquote><p>如何挂载云盘？其实看alist的官方文档也足够了</p><p>一个是获取ali云盘的refresh token</p><p>一个是获取ali云盘的某一格文件夹id</p></blockquote><p>成功添加存储之后，就可以使用本地播放器播放1080p的视频了</p><h1 id="win10远程桌面"><a href="#win10远程桌面" class="headerlink" title="win10远程桌面"></a>win10远程桌面</h1><p>这是-<a href="https://sanukiura.github.io/">昊宝</a>教的</p><p>在csdn有教程，这里不赘述了</p><p><a href="https://blog.csdn.net/pengkezx/article/details/124123325">https://blog.csdn.net/pengkezx/article/details/124123325</a></p><blockquote><p>主要感受：这种方法只是在Windows自带的远程桌面工具中，增加了一层服务，因此使用远程桌面还是特别流畅，使用ipad+键盘+手写笔甚至都能有很不错的效果</p></blockquote><h1 id="nas"><a href="#nas" class="headerlink" title="nas"></a>nas</h1><p>这是解决看pain<strong>等</strong>问题的另一个方案，但是不知道买哪个，可以咨询-<a href="https://tt2ter.github.io/">yu宝</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装方法</title>
      <link href="/2023/03/02/Linux%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"/>
      <url>/2023/03/02/Linux%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#rpm">RPM</a><ul><li><a href="#默认安装路径">默认安装路径</a></li><li><a href="#查询-默认安装路径">查询 默认安装路径</a></li><li><a href="#改变默认安装路径不推荐">改变默认安装路径【不推荐】</a></li></ul></li><li><a href="#源码安装">源码安装</a><ul><li><a href="#从源码解压配置编译安装一个程序">从源码解压，配置，编译，安装，一个程序</a></li><li><a href="#linux源码包卸载">Linux源码包卸载</a></li></ul></li><li><a href="#npm安装">npm安装</a></li><li><a href="#linux环境变量配置">Linux环境变量配置</a><ul><li><a href="#linux读取环境变量">Linux读取环境变量</a><ul><li><a href="#linux环境变量配置方法一export-path">Linux环境变量配置方法一：<code>export PATH</code></a></li><li><a href="#linux环境变量配置方法二vim-bashrc">Linux环境变量配置方法二：<code>vim ~/.bashrc</code></a></li><li><a href="#linux环境变量配置方法三vim-bash_profile">Linux环境变量配置方法三：<code>vim ~/.bash_profile</code></a></li><li><a href="#linux环境变量配置方法四vim-etcbashrc">Linux环境变量配置方法四：<code>vim /etc/bashrc</code></a></li><li><a href="#linux环境变量配置方法五vim-etcprofile">Linux环境变量配置方法五：<code>vim /etc/profile</code></a></li><li><a href="#linux环境变量配置方法六vim-etcenvironment">Linux环境变量配置方法六：<code>vim /etc/environment</code></a></li></ul></li><li><a href="#linux环境变量加载原理解析">Linux环境变量加载原理解析</a><ul><li><a href="#环境变量的分类">环境变量的分类</a></li><li><a href="#测试linux环境变量加载顺序的方法">测试Linux环境变量加载顺序的方法</a></li><li><a href="#linux环境变量文件加载详解">Linux环境变量文件加载详解</a></li><li><a href="#一些小技巧">一些小技巧</a></li></ul></li></ul></li></ul><blockquote><p> 链接：<a href="https://juejin.cn/post/7017730484520091655">https://juejin.cn/post/7017730484520091655</a></p></blockquote><h1 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h1><blockquote><p>rpm命令只能安装本地的rpm包，而yum可以在线获取社区的rpm包</p></blockquote><h2 id="默认安装路径"><a href="#默认安装路径" class="headerlink" title="默认安装路径"></a>默认安装路径</h2><p>通常，RPM 包采用系统默认的安装路径。安装文件会按照类别分别安装到不同的目录，如下所示：</p><div class="table-container"><table><thead><tr><th>RPM 包默认安装路径</th><th>含 义</th></tr></thead><tbody><tr><td>/etc/</td><td>配置文件安装目录，如/etc/my.cfg</td></tr><tr><td>/usr/bin/</td><td>可执行的命令安装目录</td></tr><tr><td>/usr/lib/</td><td>程序所使用的函数库保存位置</td></tr><tr><td>/usr/share/doc/</td><td>基本的软件使用手册保存位置</td></tr><tr><td>/usr/share/man/</td><td>帮助文件(man page文件)保存位置</td></tr></tbody></table></div><p>RPM 包还可以手动指定安装路径（不推荐）。</p><h2 id="查询-默认安装路径"><a href="#查询-默认安装路径" class="headerlink" title="查询 默认安装路径"></a>查询 默认安装路径</h2><p>rpm包文件中会记录相关的配置参数，并且会对照Linux系统的环境，在安装时生成对应的信息，比如安装路径、配置路径等。</p><p><strong>查询一个包的默认安装路径等信息，可以使用 <code>rpm -qpl &lt;package_name&gt;</code>。</strong></p><ul><li><code>-q|--query</code> 表示执行rpm查询。单独使用表示查询安装的包 —— 是否安装，及安装的包名（获得某个软件包的全名）。</li><li><code>-p|--package</code> 表示查询指定的软件包（尤其是未安装的包）。如果一个包未安装，不指定 <code>-p</code> 将会提示未安装。</li><li><code>-l|--list</code>：表示列出软件包中包含的所有文件及各自安装路径。</li></ul><p>比如，查询一个在线的MySQL包的信息，包括默认安装路径：【可以安装MySQL的安装涉及到的路径远比平时认识到的多的多】</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qpl https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-8.0-community-el7-x86_64/mysql-community-server-8.0.26-1.el7.x86_64.rpm</span></span><br><span class="line">/etc/logrotate.d/mysql</span><br><span class="line">/etc/my.cnf</span><br><span class="line">/etc/my.cnf.d</span><br><span class="line">/usr/bin/ibd2sdi</span><br><span class="line">/usr/bin/innochecksum</span><br><span class="line">/usr/bin/lz4_decompress</span><br><span class="line">/usr/bin/my_print_defaults</span><br><span class="line">/usr/bin/myisam_ftdump</span><br><span class="line">/usr/bin/myisamchk</span><br><span class="line">/usr/bin/myisamlog</span><br><span class="line">/usr/bin/myisampack</span><br><span class="line">/usr/bin/mysql_secure_installation</span><br><span class="line">/usr/bin/mysql_ssl_rsa_setup</span><br><span class="line">/usr/bin/mysql_tzinfo_to_sql</span><br><span class="line">/usr/bin/mysql_upgrade</span><br><span class="line">/usr/bin/mysqld_pre_systemd</span><br><span class="line">/usr/bin/mysqldumpslow</span><br><span class="line">/usr/bin/perror</span><br><span class="line">/usr/bin/zlib_decompress</span><br><span class="line">/usr/lib/systemd/system/mysqld.service</span><br><span class="line">/usr/lib/systemd/system/mysqld@.service</span><br><span class="line">/usr/lib/tmpfiles.d/mysql.conf</span><br><span class="line">/usr/lib64/mysql/mecab</span><br><span class="line">/usr/lib64/mysql/mecab/dic</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/char.bin</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/dicrc</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/left-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/matrix.bin</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/pos-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/rewrite.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/right-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/sys.dic</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_euc-jp/unk.dic</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/char.bin</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/dicrc</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/left-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/matrix.bin</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/pos-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/rewrite.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/right-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/sys.dic</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_sjis/unk.dic</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/char.bin</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/dicrc</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/left-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/matrix.bin</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/pos-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/rewrite.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/right-id.def</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/sys.dic</span><br><span class="line">/usr/lib64/mysql/mecab/dic/ipadic_utf-8/unk.dic</span><br><span class="line">/usr/lib64/mysql/mecab/etc</span><br><span class="line">/usr/lib64/mysql/mecab/etc/mecabrc</span><br><span class="line">/usr/lib64/mysql/plugin</span><br><span class="line">/usr/lib64/mysql/plugin/adt_null.so</span><br><span class="line">/usr/lib64/mysql/plugin/auth_socket.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_audit_api_message_emit.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_keyring_file.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_log_filter_dragnet.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_log_sink_json.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_log_sink_syseventlog.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_mysqlbackup.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_query_attributes.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_reference_cache.so</span><br><span class="line">/usr/lib64/mysql/plugin/component_validate_password.so</span><br><span class="line">/usr/lib64/mysql/plugin/connection_control.so</span><br><span class="line">/usr/lib64/mysql/plugin/ddl_rewriter.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug</span><br><span class="line">/usr/lib64/mysql/plugin/debug/adt_null.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/auth_socket.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_audit_api_message_emit.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_keyring_file.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_log_filter_dragnet.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_log_sink_json.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_log_sink_syseventlog.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_mysqlbackup.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_query_attributes.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_reference_cache.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/component_validate_password.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/connection_control.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/ddl_rewriter.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/group_replication.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/ha_example.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/ha_mock.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/innodb_engine.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/keyring_file.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/keyring_udf.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/libmemcached.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/libpluginmecab.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/locking_service.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/mypluglib.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/mysql_clone.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/mysql_no_login.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/rewrite_example.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/rewriter.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/semisync_master.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/semisync_replica.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/semisync_slave.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/semisync_source.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/validate_password.so</span><br><span class="line">/usr/lib64/mysql/plugin/debug/version_token.so</span><br><span class="line">/usr/lib64/mysql/plugin/group_replication.so</span><br><span class="line">/usr/lib64/mysql/plugin/ha_example.so</span><br><span class="line">/usr/lib64/mysql/plugin/ha_mock.so</span><br><span class="line">/usr/lib64/mysql/plugin/innodb_engine.so</span><br><span class="line">/usr/lib64/mysql/plugin/keyring_file.so</span><br><span class="line">/usr/lib64/mysql/plugin/keyring_udf.so</span><br><span class="line">/usr/lib64/mysql/plugin/libmemcached.so</span><br><span class="line">/usr/lib64/mysql/plugin/libpluginmecab.so</span><br><span class="line">/usr/lib64/mysql/plugin/locking_service.so</span><br><span class="line">/usr/lib64/mysql/plugin/mypluglib.so</span><br><span class="line">/usr/lib64/mysql/plugin/mysql_clone.so</span><br><span class="line">/usr/lib64/mysql/plugin/mysql_no_login.so</span><br><span class="line">/usr/lib64/mysql/plugin/rewrite_example.so</span><br><span class="line">/usr/lib64/mysql/plugin/rewriter.so</span><br><span class="line">/usr/lib64/mysql/plugin/semisync_master.so</span><br><span class="line">/usr/lib64/mysql/plugin/semisync_replica.so</span><br><span class="line">/usr/lib64/mysql/plugin/semisync_slave.so</span><br><span class="line">/usr/lib64/mysql/plugin/semisync_source.so</span><br><span class="line">/usr/lib64/mysql/plugin/validate_password.so</span><br><span class="line">/usr/lib64/mysql/plugin/version_token.so</span><br><span class="line">/usr/lib64/mysql/private</span><br><span class="line">/usr/lib64/mysql/private/libprotobuf-lite.so.3.11.4</span><br><span class="line">/usr/lib64/mysql/private/libprotobuf.so.3.11.4</span><br><span class="line">/usr/sbin/mysqld</span><br><span class="line">/usr/sbin/mysqld-debug</span><br><span class="line">/usr/share/doc/mysql-community-server-8.0.26</span><br><span class="line">/usr/share/doc/mysql-community-server-8.0.26/INFO_BIN</span><br><span class="line">/usr/share/doc/mysql-community-server-8.0.26/INFO_SRC</span><br><span class="line">/usr/share/doc/mysql-community-server-8.0.26/LICENSE</span><br><span class="line">/usr/share/doc/mysql-community-server-8.0.26/README</span><br><span class="line">/usr/share/man/man1/ibd2sdi.1.gz</span><br><span class="line">/usr/share/man/man1/innochecksum.1.gz</span><br><span class="line">/usr/share/man/man1/lz4_decompress.1.gz</span><br><span class="line">/usr/share/man/man1/my_print_defaults.1.gz</span><br><span class="line">/usr/share/man/man1/myisam_ftdump.1.gz</span><br><span class="line">/usr/share/man/man1/myisamchk.1.gz</span><br><span class="line">/usr/share/man/man1/myisamlog.1.gz</span><br><span class="line">/usr/share/man/man1/myisampack.1.gz</span><br><span class="line">/usr/share/man/man1/mysql_secure_installation.1.gz</span><br><span class="line">/usr/share/man/man1/mysql_ssl_rsa_setup.1.gz</span><br><span class="line">/usr/share/man/man1/mysql_tzinfo_to_sql.1.gz</span><br><span class="line">/usr/share/man/man1/mysql_upgrade.1.gz</span><br><span class="line">/usr/share/man/man1/mysqldumpslow.1.gz</span><br><span class="line">/usr/share/man/man1/mysqlman.1.gz</span><br><span class="line">/usr/share/man/man1/perror.1.gz</span><br><span class="line">/usr/share/man/man1/zlib_decompress.1.gz</span><br><span class="line">/usr/share/man/man8/mysqld.8.gz</span><br><span class="line">/usr/share/mysql-8.0/dictionary.txt</span><br><span class="line">/usr/share/mysql-8.0/innodb_memcached_config.sql</span><br><span class="line">/usr/share/mysql-8.0/install_rewriter.sql</span><br><span class="line">/usr/share/mysql-8.0/mysql-log-rotate</span><br><span class="line">/usr/share/mysql-8.0/uninstall_rewriter.sql</span><br><span class="line">/var/lib/mysql</span><br><span class="line">/var/lib/mysql-files</span><br><span class="line">/var/lib/mysql-keyring</span><br><span class="line">/var/run/mysqld</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>可以看到，列出了mysql安装的所有目录【真多！】</p><blockquote><p>如果查询未安装的软件包，且未指定 <code>-p</code> 参数，会报错<code>is not installed</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ql https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-8.0-community-el7-x86_64/mysql-community-server-8.0.26-1.el7.x86_64.rpm</span></span><br><span class="line">package https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-8.0-community-el7-x86_64/mysql-community-server-8.0.26-1.el7.x86_64.rpm is not installed</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure></blockquote><h2 id="改变默认安装路径【不推荐】"><a href="#改变默认安装路径【不推荐】" class="headerlink" title="改变默认安装路径【不推荐】"></a>改变默认安装路径【不推荐】</h2><p><code>rpm -qpl</code>命令可以查看软件包默认的安装目录。在安装软件包时，通过<code>--relocate</code>参数，可以修改安装中涉及到的默认路径。</p><p>如下所示，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh --relocate /usr/bin=/home/user_test/bin --relocate /usr/share/doc=/home/user_test/share/doc xxxxxx.rpm</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>再一次声明：极其非常特别不推荐修改rpm包的默认安装路径。 有可能导致软件运行异常、管理问题等。</p><blockquote><p> <a href="http://c.biancheng.net/view/2952.html">http://c.biancheng.net/view/2952.html</a></p></blockquote><h1 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h1><blockquote><p><strong>从源码安装后，需要配置环境变量才能在任意位置使用命令</strong></p></blockquote><h2 id="从源码解压，配置，编译，安装，一个程序"><a href="#从源码解压，配置，编译，安装，一个程序" class="headerlink" title="从源码解压，配置，编译，安装，一个程序"></a>从源码解压，配置，编译，安装，一个程序</h2><p>本节仍然以安装 apache 为例，安装过程分为如下几步：</p><ol><li><p>下载 apache 源码包。该软件的源码包可通过官方网站 <a href="http://httpd.apache.org/download.cgi#apache24">http://httpd.apache.org/download.cgi#apache24</a> 下载，得到的源码包格式为压缩包（ “.tar.gz” 或 “.tar.bz2” ）。</p><p>将各种文件分门别类保存在对应的目录中，应该成为合格 Linux 管理员约定俗成的习惯。Linux 系统中用于保存源代码的位置主要有 2 个，分别是 “/usr/src” 和 “/usr/local/src”，其中 “/usr/src” 用来保存内核源代码，”/usr/local/src” 用来保存用户下载的源代码。</p></li><li><p>将源码包进行解压缩，使用命令如下：</p><p>[root@localhost ~]#tar -zxvf httpd-2.2.9.tar.gz|more</p></li><li><p>进入解压目录，执行如下命令：</p><p>[root@localhost ~]# ls<br>anaconda-ks.cfg httpd-2.2.9 httpd-2.2.9.tar.gz install.log install.log.syslog<br>[root@localhost ~]# cd httpd-2.2.9</p></li><li><p>./configure 软件配置与检查。这一步主要完成以下 3 项任务：</p><ul><li><p>检测系统环境是否符合安装要求。</p></li><li><p>定义需要的功能选项。通过 “./configure—prefix=安装路径” 可以指定安装路径。注意，configure 不是系统命令，而是源码包软件自带的一个脚本程序，所以必须采用 “./configure” 方式执行（”./“ 代表在当前目录下）。</p><p>“./configure” 支持的功能选项较多，可执行 “./configure—help” 命令查询其支持的功能，例如：</p><p>[root@localhost httpd-2.2.9]#./configure —help|more<br>#查询apache支持的选项功能（不是必需步骤）</p></li><li><p>把系统环境的检测结果和定义好的功能选项写入 Makefile 文件，因为后续的编译和安装需要依赖这个文件的内容。</p></li></ul><p>此步具体执行代码如下：</p><p>[root@localhost httpd-2.2.9]# ./configure —prefix=/usr/local/apache2<br>checking for chosen layout…Apache<br>checking for working mkdir -p…yes<br>checking build system type…i686-pc-linux-gnu<br>checking host system type…i686-pc-linux-gnu<br>checking target system typa…i686-pc-linux-gnu<br>…省略部分输出…</p><p>—prefix 选项的含义为指定安装目录。</p><p>此命令没有加载其他功能，只是指定安装目录。需要说明的是，”/usr/local/apache2” 目录不需要手工建立，安装完成后会自动建立（这个目录是否生成也是检测软件是否正确安装的重要标志）。</p></li><li><p>make 编译。make 会调用 gcc 编译器，并读取 Makefile 文件中的信息进行系统软件编译。编译的目的就是把源码程序转变为能被 Linux 识别的可执行文件，这些可执行文件保存在当前目录下。</p><p>执行的编译命令如下：</p><p>[root@localhost httpd-2.2.9]# make</p><p>编程过程较为耗时，需要有足够的耐心。</p></li><li><p>正式开始安装软件，这里通常会写清程序的安装位置，如果没有，则建议读者把安装的执行过程保存下来，以备将来删除软件时使用。安装指令如下：</p><p>[root@localhost httpd-2.2.9]# make install</p><p>整个过程不报错，即为安装成功。</p><p>安装源码包过程中，如果出现“error”（或“warning”）且安装过程停止，表示安装失败；反之，如果仅出现警告信息，但安装过程还在继续，这并不是安装失败，顶多使软件部分功能无法使用。</p></li></ol><p>注意，如果在 “./configure” 或 “make” 编译中报错，则在重新执行命令前一定要执行 <code>make clean</code> 命令，它会清空 Makefile 文件或编译产生的 “.o” 头文件。</p><h2 id="Linux源码包卸载"><a href="#Linux源码包卸载" class="headerlink" title="Linux源码包卸载"></a>Linux源码包卸载</h2><p>通过源码包方式安装的各个软件，其安装文件独自保存在 /usr/local/ 目录下的各子目录中。例如，apache 所有的安装文件都保存在 /usr/local/apache2 目录下。这就为源码包的卸载提供了便利。</p><p>源码包的卸载，只需要找到软件的安装位置，直接删除所在目录即可，不会遗留任何垃圾文件。需要读者注意的是，在删除软件之前，应先将软件停止服务。</p><p>以删除 apache 为例，只需关闭 apache 服务后执行如下命令即可：</p><p>[root@localhost ~]# rm -rf /usr/local/apache2/</p><blockquote><p>原文链接：<a href="https://blog.csdn.net/xinluke/article/details/52330867">https://blog.csdn.net/xinluke/article/details/52330867</a></p></blockquote><h1 id="npm安装"><a href="#npm安装" class="headerlink" title="npm安装"></a>npm安装</h1><blockquote><p>这个和linux没关系，是node.js的包管理工具npm，在写一个node.js项目时，需要在线安装【包】是，需要注意的</p></blockquote><p>npm的包安装分为本地安装（local）、全局安装（global）两种</p><p>npm install grunt # 本地安装<br>npm install -g grunt-cli # 全局安装</p><p>这两种安装方式的区别</p><p>本地安装<br>将安装包放在 ./node_modules 下（运行npm时所在的目录）<br>可以通过 require() 来引入本地安装的包</p><p>全局安装<br>模块将被下载安装到全局目录中，即Node的安装目录下的node_modules下<br>可以直接在命令行里使用<br>通过全局安装的插件不可以通过require() 来引入</p><blockquote><p> <a href="https://www.cnblogs.com/youyoui/p/10680329.html">https://www.cnblogs.com/youyoui/p/10680329.html</a></p></blockquote><h1 id="Linux环境变量配置"><a href="#Linux环境变量配置" class="headerlink" title="Linux环境变量配置"></a>Linux环境变量配置</h1><p>在自定义安装软件的时候，经常需要配置环境变量，下面列举出各种对环境变量的配置方法。</p><p>下面所有例子的环境说明如下：</p><ul><li>系统：Ubuntu 14.0</li><li>用户名：uusama</li><li>需要配置MySQL环境变量路径：/home/uusama/mysql/bin</li></ul><h2 id="Linux读取环境变量"><a href="#Linux读取环境变量" class="headerlink" title="Linux读取环境变量"></a>Linux读取环境变量</h2><p>读取环境变量的方法：</p><ul><li><code>export</code>命令显示当前系统定义的所有环境变量</li><li><code>echo $PATH</code>命令输出当前的<code>PATH</code>环境变量的值</li></ul><p>这两个命令执行的效果如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">uusama@ubuntu:~$ export</span><br><span class="line">declare -x HOME=&quot;/home/uusama&quot;</span><br><span class="line">declare -x LANG=&quot;en_US.UTF-8&quot;</span><br><span class="line">declare -x LANGUAGE=&quot;en_US:&quot;</span><br><span class="line">declare -x LESSCLOSE=&quot;/usr/bin/lesspipe %s %s&quot;</span><br><span class="line">declare -x LESSOPEN=&quot;| /usr/bin/lesspipe %s&quot;</span><br><span class="line">declare -x LOGNAME=&quot;uusama&quot;</span><br><span class="line">declare -x MAIL=&quot;/var/mail/uusama&quot;</span><br><span class="line">declare -x PATH=&quot;/home/uusama/bin:/home/uusama/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><br><span class="line">declare -x SSH_TTY=&quot;/dev/pts/0&quot;</span><br><span class="line">declare -x TERM=&quot;xterm&quot;</span><br><span class="line">declare -x USER=&quot;uusama&quot;</span><br><span class="line"></span><br><span class="line">uusama@ubuntu:~$ echo $PATH</span><br><span class="line">/home/uusama/bin:/home/uusama/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure><p>其中<code>PATH</code>变量定义了运行命令的查找路径，以冒号<code>:</code>分割不同的路径，使用<code>export</code>定义的时候可加双引号也可不加。</p><h3 id="Linux环境变量配置方法一：export-PATH"><a href="#Linux环境变量配置方法一：export-PATH" class="headerlink" title="Linux环境变量配置方法一：export PATH"></a>Linux环境变量配置方法一：<code>export PATH</code></h3><p>使用<code>export</code>命令直接修改<code>PATH</code>的值，配置MySQL进入环境变量的方法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/home/uusama/mysql/bin:$PATH</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者把PATH放在前面</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：立即生效</li><li>生效期限：当前终端有效，窗口关闭后无效</li><li>生效范围：仅对当前用户有效</li><li>配置的环境变量中不要忘了加上原来的配置，即<code>$PATH</code>部分，避免覆盖原来配置</li></ul><h3 id="Linux环境变量配置方法二：vim-bashrc"><a href="#Linux环境变量配置方法二：vim-bashrc" class="headerlink" title="Linux环境变量配置方法二：vim ~/.bashrc"></a>Linux环境变量配置方法二：<code>vim ~/.bashrc</code></h3><p>通过修改用户目录下的<code>~/.bashrc</code>文件进行配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果有后续的环境变量加载文件覆盖了<code>PATH</code>定义，则可能不生效</li></ul><h3 id="Linux环境变量配置方法三：vim-bash-profile"><a href="#Linux环境变量配置方法三：vim-bash-profile" class="headerlink" title="Linux环境变量配置方法三：vim ~/.bash_profile"></a>Linux环境变量配置方法三：<code>vim ~/.bash_profile</code></h3><p>和修改<code>~/.bashrc</code>文件类似，也是要在文件最后加上新的路径即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bash_profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果没有<code>~/.bash_profile</code>文件，则可以编辑<code>~/.profile</code>文件或者新建一个</li></ul><h3 id="Linux环境变量配置方法四：vim-etc-bashrc"><a href="#Linux环境变量配置方法四：vim-etc-bashrc" class="headerlink" title="Linux环境变量配置方法四：vim /etc/bashrc"></a>Linux环境变量配置方法四：<code>vim /etc/bashrc</code></h3><p>该方法是修改系统配置，需要管理员权限（如root）或者对该文件的写入权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/bashrc</span><br><span class="line"></span><br><span class="line">vim /etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h3 id="Linux环境变量配置方法五：vim-etc-profile"><a href="#Linux环境变量配置方法五：vim-etc-profile" class="headerlink" title="Linux环境变量配置方法五：vim /etc/profile"></a>Linux环境变量配置方法五：<code>vim /etc/profile</code></h3><p>该方法修改系统配置，需要管理员权限或者对该文件的写入权限，和<code>vim /etc/bashrc</code>类似：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果/etc/profile文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/profile</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h3 id="Linux环境变量配置方法六：vim-etc-environment"><a href="#Linux环境变量配置方法六：vim-etc-environment" class="headerlink" title="Linux环境变量配置方法六：vim /etc/environment"></a>Linux环境变量配置方法六：<code>vim /etc/environment</code></h3><p>该方法是修改系统环境配置文件，需要管理员权限或者对该文件的写入权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/environment</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/environment</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h2 id="Linux环境变量加载原理解析"><a href="#Linux环境变量加载原理解析" class="headerlink" title="Linux环境变量加载原理解析"></a>Linux环境变量加载原理解析</h2><p>上面列出了环境变量的各种配置方法，那么Linux是如何加载这些配置的呢？是以什么样的顺序加载的呢？</p><p>特定的加载顺序会导致相同名称的环境变量定义被覆盖或者不生效。</p><h3 id="环境变量的分类"><a href="#环境变量的分类" class="headerlink" title="环境变量的分类"></a>环境变量的分类</h3><p>环境变量可以简单的分成用户自定义的环境变量以及系统级别的环境变量。</p><ul><li>用户级别环境变量定义文件：<code>~/.bashrc</code>、<code>~/.profile</code>（部分系统为：<code>~/.bash_profile</code>）</li><li>系统级别环境变量定义文件：<code>/etc/bashrc</code>、<code>/etc/profile</code>(部分系统为：<code>/etc/bash_profile</code>）、<code>/etc/environment</code></li></ul><p>另外在用户环境变量中，系统会首先读取<code>~/.bash_profile</code>（或者<code>~/.profile</code>）文件，如果没有该文件则读取<code>~/.bash_login</code>，根据这些文件中内容再去读取<code>~/.bashrc</code>。</p><h3 id="测试Linux环境变量加载顺序的方法"><a href="#测试Linux环境变量加载顺序的方法" class="headerlink" title="测试Linux环境变量加载顺序的方法"></a>测试Linux环境变量加载顺序的方法</h3><p>为了测试各个不同文件的环境变量加载顺序，我们在每个环境变量定义文件中的第一行都定义相同的环境变量<code>UU_ORDER</code>，该变量的值为本身的值连接上当前文件名称。</p><p>需要修改的文件如下：</p><ul><li><code>/etc/environment</code></li><li><code>/etc/profile</code></li><li><code>/etc/profile.d/test.sh</code>，新建文件，没有文件夹可略过</li><li><code>/etc/bashrc</code>，或者<code>/etc/bash.bashrc</code></li><li><code>~/.bash_profile</code>，或者<code>~/.profile</code></li><li><code>~/.bashrc</code></li></ul><p>在每个文件中的第一行都加上下面这句代码，并相应的把冒号后的内容修改为当前文件的绝对文件名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export UU_ORDER=&quot;$UU_ORDER:~/.bash_profile&quot;</span><br></pre></td></tr></table></figure><p>修改完之后保存，新开一个窗口，然后<code>echo $UU_ORDER</code>观察变量的值：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uusama@ubuntu:~$ echo $UU_ORDER</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">UU_ORDER:/etc/environment:/etc/profile:/etc/bash.bashrc:/etc/profile.d/test.sh:~/.profile:~/.bashrc</span></span><br></pre></td></tr></table></figure><p>可以推测出Linux加载环境变量的顺序如下：</p><ol><li><code>/etc/environment</code></li><li><code>/etc/profile</code></li><li><code>/etc/bash.bashrc</code></li><li><code>/etc/profile.d/test.sh</code></li><li><code>~/.profile</code></li><li><code>~/.bashrc</code></li></ol><h3 id="Linux环境变量文件加载详解"><a href="#Linux环境变量文件加载详解" class="headerlink" title="Linux环境变量文件加载详解"></a>Linux环境变量文件加载详解</h3><p>由上面的测试可容易得出Linux加载环境变量的顺序如下，：</p><p>系统环境变量 -&gt; 用户自定义环境变量<br><code>/etc/environment</code> -&gt; <code>/etc/profile</code> -&gt; <code>~/.profile</code></p><p>打开<code>/etc/profile</code>文件你会发现，该文件的代码中会加载<code>/etc/bash.bashrc</code>文件，然后检查<code>/etc/profile.d/</code>目录下的<code>.sh</code>文件并加载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/profile: system-wide .profile file <span class="keyword">for</span> the Bourne shell (sh(1))</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</span></span><br><span class="line"></span><br><span class="line">if [ &quot;$PS1&quot; ]; then</span><br><span class="line">  if [ &quot;$BASH&quot; ] &amp;&amp; [ &quot;$BASH&quot; != &quot;/bin/sh&quot; ]; then</span><br><span class="line">    # The file bash.bashrc already sets the default PS1.</span><br><span class="line">    # PS1=&#x27;\h:\w\$ &#x27;</span><br><span class="line">    if [ -f /etc/bash.bashrc ]; then</span><br><span class="line">      . /etc/bash.bashrc</span><br><span class="line">    fi</span><br><span class="line">  else</span><br><span class="line">    if [ &quot;`id -u`&quot; -eq 0 ]; then</span><br><span class="line">      PS1=&#x27;# &#x27;</span><br><span class="line">    else</span><br><span class="line">      PS1=&#x27;$ &#x27;</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -d /etc/profile.d ]; then</span><br><span class="line">  for i in /etc/profile.d/*.sh; do</span><br><span class="line">    if [ -r $i ]; then</span><br><span class="line">      . $i</span><br><span class="line">    fi</span><br><span class="line">  done</span><br><span class="line">  unset i</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>其次再打开<code>~/.profile</code>文件，会发现该文件中加载了<code>~/.bashrc</code>文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span> running bash</span></span><br><span class="line">if [ -n &quot;$BASH_VERSION&quot; ]; then</span><br><span class="line">    # include .bashrc if it exists</span><br><span class="line">    if [ -f &quot;$HOME/.bashrc&quot; ]; then</span><br><span class="line">. &quot;$HOME/.bashrc&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">set</span> PATH so it includes user<span class="string">&#x27;s private bin directories</span></span></span><br><span class="line">PATH=&quot;$HOME/bin:$HOME/.local/bin:$PATH&quot;</span><br></pre></td></tr></table></figure><p>从<code>~/.profile</code>文件中代码不难发现，<code>/.profile</code>文件<strong>只在用户登录的时候读取一次</strong>，而<code>/.bashrc</code>会在每次运行<code>Shell</code>脚本的时候读取一次。</p><h3 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h3><p>可以自定义一个环境变量文件，比如在某个项目下定义<code>uusama.profile</code>，在这个文件中使用<code>export</code>定义一系列变量，然后在<code>~/.profile</code>文件后面加上：<code>sourc uusama.profile</code>，这样你每次登陆都可以在Shell脚本中使用自己定义的一系列变量。</p><p>也可以使用<code>alias</code>命令定义一些命令的别名，比如<code>alias rm=&quot;rm -i&quot;</code>（双引号必须），并把这个代码加入到<code>~/.profile</code>中，这样你每次使用<code>rm</code>命令的时候，都相当于使用<code>rm -i</code>命令，非常方便。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alipan-CloudDrive挂载</title>
      <link href="/2022/05/27/a-drive%E6%8C%82%E8%BD%BD/"/>
      <url>/2022/05/27/a-drive%E6%8C%82%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="针对pc本地存储不够用，把阿里云盘挂载到系统上扩容"><a href="#针对pc本地存储不够用，把阿里云盘挂载到系统上扩容" class="headerlink" title="针对pc本地存储不够用，把阿里云盘挂载到系统上扩容"></a>针对pc本地存储不够用，把阿里云盘挂载到系统上扩容</h1><p>学生优惠：本科四年1个T</p><h1 id="避雷"><a href="#避雷" class="headerlink" title="避雷"></a>避雷</h1><ul><li>目前搜索引擎上看到最多的是cloud drive的不开源软件支持阿里云盘挂载，版本是1.1，但是bug极多，误碰</li></ul><h1 id="挂载步骤"><a href="#挂载步骤" class="headerlink" title="挂载步骤"></a>挂载步骤</h1><ul><li><a href="https://www.bilibili.com/read/cv16275095/">参考链接</a></li></ul><p>重点在github上的项目：<a href="https://github.com/RaiDrive/RaiDrive.Translation">RaiDrive挂载软件</a>，在这里总结一下</p><ol><li><p>下载java，后续的bat里面含java的语句(8和18挑一个版本)</p></li><li><p>修改webdav.bat源文件里的内容：<strong>该文件在哪个盘</strong>  <strong>cd到该文件的地址</strong> <strong>端口</strong> <strong>阿里云盘网页端的token</strong></p></li><li><p>运行该文件并打开 <a href="http://127.0.0.1">http://127.0.0.1</a>: 端口（账号密码都是admin）</p></li><li><p>设置该bat文件的开机自启</p></li><li><p>安装RaiDrivre并添加你的云盘</p><h1 id="所需文件"><a href="#所需文件" class="headerlink" title="所需文件"></a>所需文件</h1><p>阿里云盘：<a href="https://www.aliyundrive.com/s/j3KuEEoYB1u">https://www.aliyundrive.com/s/j3KuEEoYB1u</a></p><p>提取码：t6i3</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudDrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我出生辣</title>
      <link href="/2022/05/17/hello-world/"/>
      <url>/2022/05/17/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="建站参考"><a href="#建站参考" class="headerlink" title="建站参考"></a>建站参考</h2><p>Check <a href="https://hexo.io/docs/">hexo的文档</a> .<br>Check <a href="https://butterfly.js.org/">butterfly的主题文档</a>.</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>对于数学公式的支持，参考<a href="https://butterfly.js.org/posts/4aa8abbe/?highlight=%E5%85%AC%E5%BC%8F">butterfly对应部分</a>，其中Katex存在<a href="https://www.zhihu.com/question/267011398">前台重复显示公式的问题</a>，但是查了半天没有找出重复渲染问题所在，因此改用MathJax。</p><p>但是，hexo的mark down渲染引擎还是有一些bug，导致MathJax在mark down中渲染公式会出错，可以参考这个<a href="https://runninggump.github.io/2018/12/05/%E6%88%90%E5%8A%9F%E8%A7%A3%E5%86%B3%E5%9C%A8hexo%E4%B8%AD%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98/">博客</a>、<a href="https://www.jianshu.com/p/7ab21c7f0674">和这个</a>。</p><p>具体而言，Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，比如在markdown语法中，下划线’_’代表斜体，会被渲染引擎处理为&lt; em&gt;标签。</p><p>因为类Latex格式书写的数学公式下划线 ‘_’ 表示下标，有特殊的含义，如果被强制转换为&lt; em&gt;标签，那么MathJax引擎在渲染数学公式的时候就会出错。例如，$x_i$在开始被渲染的时候，处理为$x<em>i</em>$，这样MathJax引擎就认为该公式有语法错误，因为不会渲染。</p><p>类似的语义冲突的符号还包括’*’, ‘{‘, ‘}’, ‘\’等。</p><p>就是 markdown html latex，这几种标记语言格式的渲染问题。</p><p>步骤1、换新md渲染引擎（bug少）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>步骤2、手动改hexo-renderer-kramed引擎的语义冲突的问题。</p><p>来到博客根目录下，找到node_modules\kramed\lib\rules\inline.js，把第11行的escape变量的值做相应的修改：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//  escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">  escape: /^\\([`*\[\]()#$+\-.!_&gt;])/</span><br></pre></td></tr></table></figure></p><p>这一步是在原基础上取消了对\,{,}的转义(escape)。同时把第20行的em变量也要做相应的修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line">  em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span><br></pre></td></tr></table></figure><h2 id="图片排版"><a href="#图片排版" class="headerlink" title="图片排版"></a>图片排版</h2><p>md控制图片排版过于简单，用html<br><a href="https://www.jianshu.com/p/cc5a35435c05">https://www.jianshu.com/p/cc5a35435c05</a><br><a href="https://blog.csdn.net/qq_21808961/article/details/80666589">https://blog.csdn.net/qq_21808961/article/details/80666589</a><br><a href="https://sobaigu.com/images-side-by-side-in-markdown.html">https://sobaigu.com/images-side-by-side-in-markdown.html</a></p><h2 id="待办事项"><a href="#待办事项" class="headerlink" title="待办事项"></a>待办事项</h2><p>hexo-renderer-kramed 的markdown渲染器并<a href="https://chengzhaoxi.xyz/b7b77151.html">不支持待办事项</a>，所以从hexo-renderer-marked 的render.js部分拿出待办事项的模块<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Support To-Do List</span></span><br><span class="line"><span class="title class_">Renderer</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">listitem</span> = <span class="keyword">function</span>(<span class="params">text</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/^\s*\[[x ]\]\s*/</span>.<span class="title function_">test</span>(text)) &#123;</span><br><span class="line">    text = text.<span class="title function_">replace</span>(<span class="regexp">/^\s*\[ \]\s*/</span>, <span class="string">&#x27;&lt;input type=&quot;checkbox&quot;&gt;&lt;/input&gt; &#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/^\s*\[x\]\s*/</span>, <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; checked&gt;&lt;/input&gt; &#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/li&gt;\n&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;li&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/li&gt;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>加入到本地的 hexo 文件夹的 ./node_modules/hexo-renderer-kramed/lib/renderer.js 中即可。</p><h2 id="Word-PPt-—-gt-blog"><a href="#Word-PPt-—-gt-blog" class="headerlink" title="Word/PPt —&gt; blog"></a>Word/PPt —&gt; blog</h2><p>将word/ppt后缀改到zip，然后拿出media文件夹放到hexo的root/source/images/&lt; post_media&gt;,即可本地/本站存储资源，比起第三方图床，更稳定，但是比较臃肿。</p><hr><blockquote><p>update 25.5.16</p></blockquote><h2 id="部分模块下线和问题"><a href="#部分模块下线和问题" class="headerlink" title="部分模块下线和问题"></a>部分模块下线和问题</h2><p>现在部署在vercel上的waline评论系统下线了，域名也下线了，有GitHub的托管网址可以用。<br>另外发现Github Pages个人博客使用Github Action<a href="https://blog.csdn.net/weixin_44165186/article/details/148174379">部署失败</a>，Github Action官方从2024年12月5日开始，到2025年1月17日对ubuntu-latest默认系统做了调整，之前是ubuntu-22.04，现在改成了ubuntu-24.04，因此之前的yml文件里面还是写的runs-on: ubuntu-latest会出现系统性的报错。把github\workflows路径下的XX.yml文件里面的runs-on: ubuntu-latest修改成runs-on: ubuntu-22.04，不过需要注意的是，这个方法算是临时方法，只能管两年。</p><h2 id="文本无法选中"><a href="#文本无法选中" class="headerlink" title="文本无法选中"></a>文本无法选中</h2><p>2022.5.11建站用的butterfly 4.2.1版本，hexo 6.2.0版本，node.js 18.1.0版本,其中butterfly的themes/butterfly/source/css/_global/index.styl的css中，body的user-select字段是none，文本无法选中，值改为text即可选中复制</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  min-height: <span class="number">100%</span></span><br><span class="line">  background: <span class="built_in">var</span>(--global-bg)</span><br><span class="line">  color: <span class="built_in">var</span>(--font-color)</span><br><span class="line">  font-size: <span class="built_in">var</span>(--global-font-size)</span><br><span class="line">  font-family: $font-family</span><br><span class="line">  line-height: $text-line-height</span><br><span class="line">  -webkit-tap-highlight-color: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  if !<span class="built_in">hexo-config</span>(<span class="string">&#x27;copy.enable&#x27;</span>)</span><br><span class="line">    user-select: text</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="背景透明度魔改"><a href="#背景透明度魔改" class="headerlink" title="背景透明度魔改"></a>背景透明度魔改</h2><p>通过css修改透明度，忘了从哪看到的参考<br>在blog/themes/butterfly/source/css/_global/index.styl最后，添加如下，即可改变post、card等元素的opacity属性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line"> <span class="selector-class">.recent-post-item</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">1</span>)<span class="meta">!important</span></span><br><span class="line"> .post_cover</span><br><span class="line">    filter: <span class="built_in">opacity</span>(<span class="number">0</span>)</span><br><span class="line"> .card-widget</span><br><span class="line">    background: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">1</span>)<span class="meta">!important</span></span><br><span class="line"></span><br><span class="line"> .avatar-img</span><br><span class="line">    filter: <span class="built_in">opacity</span>(<span class="number">0.1</span>)</span><br><span class="line"> .thumbnail</span><br><span class="line">    filter: <span class="built_in">opacity</span>(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><h2 id="git存档"><a href="#git存档" class="headerlink" title="git存档"></a>git存档</h2><p>hexo-butterfly魔改的主题有git记录，但是butterfly父git和blog的git有冲突，合并起来会出问题，因此不要fetch butterfly在github上的最新版，用旧版的hexo+butterfly+node.js就好了，但是这样版本很旧，容易出问题，因此还是打包一版work的（git+hexo+butterfly+node.js）在tg。<br>另外.git在butterfly下面，可以跟踪不到hexo根目录的_config.yml和npm包中md渲染引擎的改动，将来重建博客可能比较费劲，好在贵在内容，渲染格式主题是小事。说不定过几天哪个系统又下线了，blog又寄了。</p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
